{"#515": {"supported/major_changes": "[#515](https://gitlab.com/libeigen/eigen/-/merge_requests/515): Adds random matrix generation via SVD with two strategies for generating singular values"}}
{"#544": {"supported/other_improved": "[#544](https://gitlab.com/libeigen/eigen/-/merge_requests/544): Added GDB pretty printer support for Eigen::Block types to improve debugging experience"}}
{"#606": {"unsupported/breaking_changes": "[#606](https://gitlab.com/libeigen/eigen/-/merge_requests/606): Removal of Sparse Dynamic Matrix from library API"}}
{"#607": {"unsupported/other_added": "[#607](https://gitlab.com/libeigen/eigen/-/merge_requests/607): Added flowchart to help users select sparse iterative solvers in unsupported module"}}
{"#608": {"supported/breaking_changes": "[#608](https://gitlab.com/libeigen/eigen/-/merge_requests/608): Removes CI jobs for C++03 compatibility, signaling transition to modern C++ standards"}}
{"#609": {"supported/other_improved": "[#609](https://gitlab.com/libeigen/eigen/-/merge_requests/609): Optimize predux, predux_min, and predux_max operations for AArch64 architecture using specialized intrinsics"}}
{"#489": {"supported/major_changes": "[#489](https://gitlab.com/libeigen/eigen/-/merge_requests/489): Added AVX512 and AVX2 support for Packet16i and Packet8i, enhancing vectorization capabilities for integer types"}}
{"#610": {"supported/major_changes": "[#610](https://gitlab.com/libeigen/eigen/-/merge_requests/610): Updates CMake configuration to centralize C++11 standard setting, simplifying build process"}}
{"#605": {"supported/other_improved": "[#605](https://gitlab.com/libeigen/eigen/-/merge_requests/605): Updated SparseExtra RandomSetter to use unordered_map for improved performance"}}
{"#543": {"unsupported/other_improved": "[#543](https://gitlab.com/libeigen/eigen/-/merge_requests/543): Improved PEP8 compliance and formatting in GDB pretty printer for better code readability"}}
{"#611": {"supported/other_fixed": "[#611](https://gitlab.com/libeigen/eigen/-/merge_requests/611): Included `<unordered_map>` header to resolve header inclusion issue"}}
{"#613": {"supported/other_fixed": "[#613](https://gitlab.com/libeigen/eigen/-/merge_requests/613): Fix `fix<N>` implementation for environments without variable templates support"}}
{"#612": {"unsupported/major_changes": "[#612](https://gitlab.com/libeigen/eigen/-/merge_requests/612): Adds support for EIGEN_TENSOR_PLUGIN, EIGEN_TENSORBASE_PLUGIN, and EIGEN_READONLY_TENSORBASE_PLUGIN in tensor classes"}}
{"#614": {"supported/other_fixed": "[#614](https://gitlab.com/libeigen/eigen/-/merge_requests/614): Fixed LAPACK test compilation issues with type mismatches in older Fortran code"}}
{"#615": {"supported/other_improved": "[#615](https://gitlab.com/libeigen/eigen/-/merge_requests/615): Adds intrin header for Windows ARM to improve compatibility and intrinsic function support"}}
{"#616": {"unsupported/other_improved": "[#616](https://gitlab.com/libeigen/eigen/-/merge_requests/616): Disabled CUDA Eigen::half host-side vectorization for compatibility with pre-CUDA 10.0 versions"}}
{"#621": {"supported/other_fixed": "[#621](https://gitlab.com/libeigen/eigen/-/merge_requests/621): Fixed GCC 4.8 ARM compilation issues by improving register constraints and resolving warnings"}}
{"#619": {"unsupported/other_improved": "[#619](https://gitlab.com/libeigen/eigen/-/merge_requests/619): Improved documentation for unsupported sparse iterative solvers"}}
{"#629": {"supported/other_fixed": "[#629](https://gitlab.com/libeigen/eigen/-/merge_requests/629): Fixed EIGEN_OPTIMIZATION_BARRIER compatibility for arm-clang compiler"}}
{"#628": {"supported/other_fixed": "[#628](https://gitlab.com/libeigen/eigen/-/merge_requests/628): Renamed 'vec_all_nan' symbol in cxx11_tensor_expr test to resolve build conflicts with altivec.h on ppc64le platform"}}
{"#485": {"supported/breaking_changes": "[#485](https://gitlab.com/libeigen/eigen/-/merge_requests/485): Removes deprecated CMake package config variables, potentially breaking existing CMake configurations"}}
{"#630": {"supported/other_fixed": "[#630](https://gitlab.com/libeigen/eigen/-/merge_requests/630): Fixed AVX2 integer packet issues and corrected AVX512 implementation details"}}
{"#622": {"unsupported/major_changes": "[#622](https://gitlab.com/libeigen/eigen/-/merge_requests/622): Renamed existing Tuple class to Pair and introduced a new Tuple class for improved device compatibility"}}
{"#618": {"supported/other_improved": "[#618](https://gitlab.com/libeigen/eigen/-/merge_requests/618): Added EIGEN_DEVICE_FUNC labels to improve CUDA 9 compatibility for gpu_basic tests"}}
{"#632": {"supported/other_improved": "[#632](https://gitlab.com/libeigen/eigen/-/merge_requests/632): Simplified CMake configuration by removing unused interface definitions"}}
{"#633": {"supported/other_improved": "[#633](https://gitlab.com/libeigen/eigen/-/merge_requests/633): Simplified CMake versioning for architecture-independent package configurations using `ARCH_INDEPENDENT` option"}}
{"#617": {"supported/other_improved": "[#617](https://gitlab.com/libeigen/eigen/-/merge_requests/617): Extended matrixmarket reader/writer to support handling of dense matrices"}}
{"#634": {"supported/other_improved": "[#634](https://gitlab.com/libeigen/eigen/-/merge_requests/634): Improved CMake package registry configuration for better dependency management"}}
{"#635": {"supported/other_fixed": "[#635](https://gitlab.com/libeigen/eigen/-/merge_requests/635): Fixed tridiagonalization selector issue by modifying `hCoeffs` vector handling to improve type compatibility"}}
{"#636": {"supported/other_removed": "[#636](https://gitlab.com/libeigen/eigen/-/merge_requests/636): Removed stray references to deprecated DynamicSparseMatrix class"}}
{"#637": {"unsupported/other_removed": "[#637](https://gitlab.com/libeigen/eigen/-/merge_requests/637): Removes obsolete DynamicSparseMatrix references and typographical errors in unsupported directory"}}
{"#638": {"supported/other_fixed": "[#638](https://gitlab.com/libeigen/eigen/-/merge_requests/638): Fixed missing packet types in pset1 function call, improving packet data handling robustness"}}
{"#639": {"supported/other_fixed": "[#639](https://gitlab.com/libeigen/eigen/-/merge_requests/639): Fixed AVX2 PacketMath.h implementation with typo corrections and unaligned load resolution"}}
{"#482": {"supported/other_added": "[#482](https://gitlab.com/libeigen/eigen/-/merge_requests/482): Adds LLDB synthetic child provider for structured display of Eigen matrices and vectors during debugging"}}
{"#624": {"unsupported/other_added": "[#624](https://gitlab.com/libeigen/eigen/-/merge_requests/624): Introduced `Serializer<T>` class for binary serialization, enhancing GPU testing data transfer capabilities"}}
{"#623": {"unsupported/major_changes": "[#623](https://gitlab.com/libeigen/eigen/-/merge_requests/623): Introduces device-compatible Tuple implementation for GPU testing, addressing compatibility issues with std::tuple"}}
{"#641": {"supported/other_improved": "[#641](https://gitlab.com/libeigen/eigen/-/merge_requests/641): Removed unnecessary std::tuple reference to simplify codebase"}}
{"#631": {"supported/other_improved": "[#631](https://gitlab.com/libeigen/eigen/-/merge_requests/631): Introduced error handling to prevent direct inclusion of internal Eigen headers"}}
{"#625": {"unsupported/major_changes": "[#625](https://gitlab.com/libeigen/eigen/-/merge_requests/625): Introduced new GPU test utilities with flexible kernel execution functions for CPU and GPU environments"}}
{"#643": {"supported/other_fixed": "[#643](https://gitlab.com/libeigen/eigen/-/merge_requests/643): Minor fix for compilation error on HIP"}}
{"#645": {"unsupported/other_improved": "[#645](https://gitlab.com/libeigen/eigen/-/merge_requests/645): Introduced default constructor for eigen_packet_wrapper to simplify memory operations"}}
{"#648": {"supported/other_improved": "[#648](https://gitlab.com/libeigen/eigen/-/merge_requests/648): Corrected typographical errors in copyright dates across project files"}}
{"#647": {"supported/other_improved": "[#647](https://gitlab.com/libeigen/eigen/-/merge_requests/647): Cleaned up EIGEN_STATIC_ASSERT to use standard C++11 static_assert, improving error messages and code organization"}}
{"#651": {"supported/other_fixed": "[#651](https://gitlab.com/libeigen/eigen/-/merge_requests/651): Remove `-fabi-version=6` flag from AVX512 builds to improve compatibility"}}
{"#646": {"supported/other_added": "[#646](https://gitlab.com/libeigen/eigen/-/merge_requests/646): Added new make targets `buildtests_gpu` and `check_gpu` to simplify GPU testing infrastructure"}}
{"#653": {"unsupported/other_fixed": "[#653](https://gitlab.com/libeigen/eigen/-/merge_requests/653): Disabled specific HIP subtests that fail due to non-functional device side malloc/free"}}
{"#649": {"supported/breaking_changes": "[#649](https://gitlab.com/libeigen/eigen/-/merge_requests/649): Move Eigen::all, last, and lastp1 back to Eigen::placeholders namespace to reduce name collision risks"}}
{"#652": {"supported/other_improved": "[#652](https://gitlab.com/libeigen/eigen/-/merge_requests/652): Added a macro to pass arguments to ctest for running tests in parallel"}}
{"#654": {"supported/other_fixed": "[#654](https://gitlab.com/libeigen/eigen/-/merge_requests/654): Silenced GCC string overflow warning in initializer_list_construction test"}}
{"#656": {"supported/other_fixed": "[#656](https://gitlab.com/libeigen/eigen/-/merge_requests/656): Resolved strict aliasing bug causing product_small function failures in matrix multiplication"}}
{"#655": {"supported/other_improved": "[#655](https://gitlab.com/libeigen/eigen/-/merge_requests/655): Improved CI test execution by running tests in parallel across all available CPU cores"}}
{"#657": {"supported/other_fixed": "[#657](https://gitlab.com/libeigen/eigen/-/merge_requests/657): Fixes implicit conversion warnings in tuple_test, improving type safety"}}
{"#572": {"supported/other_improved": "[#572](https://gitlab.com/libeigen/eigen/-/merge_requests/572): Removed unnecessary `const` qualifiers from AutodiffScalar return types to improve code quality and readability"}}
{"#659": {"supported/other_fixed": "[#659](https://gitlab.com/libeigen/eigen/-/merge_requests/659): Fixed undefined behavior in BFloat16 float conversion by replacing `reinterpret_cast` with a safer alternative, improving reliability on PPC platforms"}}
{"#660": {"supported/other_improved": "[#660](https://gitlab.com/libeigen/eigen/-/merge_requests/660): Corrected multiple typos in documentation and comments to improve code clarity and readability"}}
{"#661": {"supported/other_improved": "[#661](https://gitlab.com/libeigen/eigen/-/merge_requests/661): Corrected typographical errors in documentation and code comments"}}
{"#663": {"supported/other_improved": "[#663](https://gitlab.com/libeigen/eigen/-/merge_requests/663): Reduced CUDA compilation warnings for versions 9.2 and 11.4"}}
{"#662": {"supported/other_improved": "[#662](https://gitlab.com/libeigen/eigen/-/merge_requests/662): Reorganized test main file for improved maintainability and code structure"}}
{"#664": {"supported/other_fixed": "[#664](https://gitlab.com/libeigen/eigen/-/merge_requests/664): Fixed MSVC compilation issues with complex compound assignment operators by disabling related tests"}}
{"#671": {"unsupported/other_fixed": "[#671](https://gitlab.com/libeigen/eigen/-/merge_requests/671): Fixed GPU special function tests by correcting checks and updating verification methods"}}
{"#669": {"unsupported/other_improved": "[#669](https://gitlab.com/libeigen/eigen/-/merge_requests/669): Optimized tensor_contract_gpu test by reducing contractions to improve test performance on Windows"}}
{"#667": {"supported/major_changes": "[#667](https://gitlab.com/libeigen/eigen/-/merge_requests/667): Significantly speeds up tensor reduction performance through loop strip mining and unrolling techniques"}}
{"#668": {"supported/other_improved": "[#668](https://gitlab.com/libeigen/eigen/-/merge_requests/668): Updated CMake Windows compiler and OS detection with more reliable and maintainable methods"}}
{"#673": {"supported/major_changes": "[#673](https://gitlab.com/libeigen/eigen/-/merge_requests/673): Vectorized implementation of Visitor.h with up to 39% performance improvement using AVX2 instructions"}}
{"#678": {"unsupported/other_improved": "[#678](https://gitlab.com/libeigen/eigen/-/merge_requests/678): Reorganized CUDA/Complex.h to GPU/Complex.h and removed deprecated TensorReductionCuda.h header"}}
{"#665": {"supported/other_fixed": "[#665](https://gitlab.com/libeigen/eigen/-/merge_requests/665): Fix tuple compilation issues in Visual Studio 2017 by replacing tuple alias with TupleImpl"}}
{"#666": {"supported/other_fixed": "[#666](https://gitlab.com/libeigen/eigen/-/merge_requests/666): Fixed MSVC+NVCC compilation issue with EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR macro"}}
{"#676": {"unsupported/major_changes": "[#676](https://gitlab.com/libeigen/eigen/-/merge_requests/676): Improved accuracy of full tensor reduction for half and bfloat16 types using tree summation algorithm"}}
{"#679": {"unsupported/other_fixed": "[#679](https://gitlab.com/libeigen/eigen/-/merge_requests/679): Disabled Tree reduction for GPU to resolve memory errors and improve GPU operation stability"}}
{"#677": {"supported/other_improved": "[#677](https://gitlab.com/libeigen/eigen/-/merge_requests/677): Optimized type punning in CUDA code by replacing memcpy with reinterpret_cast for improved GPU performance"}}
{"#686": {"supported/other_fixed": "[#686](https://gitlab.com/libeigen/eigen/-/merge_requests/686): Reverted bit_cast implementation to use memcpy for CUDA to prevent undefined behavior"}}
{"#687": {"supported/other_improved": "[#687](https://gitlab.com/libeigen/eigen/-/merge_requests/687): Adds nan-propagation options to elementwise min/max operations and reductions in matrix and array plugins"}}
{"#691": {"supported/other_fixed": "[#691](https://gitlab.com/libeigen/eigen/-/merge_requests/691): Fixed Clang warnings by replacing bitwise operators with correct logical operators"}}
{"#693": {"supported/other_improved": "[#693](https://gitlab.com/libeigen/eigen/-/merge_requests/693): Enhanced documentation for Stride class inner stride behavior in compile-time vectors"}}
{"#692": {"supported/other_improved": "[#692](https://gitlab.com/libeigen/eigen/-/merge_requests/692): Extend Eigen's Qt support to Qt6 by modifying compatibility functions in Transform.h"}}
{"#688": {"supported/other_added": "[#688](https://gitlab.com/libeigen/eigen/-/merge_requests/688): Added nan-propagation options to matrix and array plugins for enhanced NaN value handling"}}
{"#696": {"supported/other_fixed": "[#696](https://gitlab.com/libeigen/eigen/-/merge_requests/696): Fixed build compatibility issues with pload and ploadu functions on ARM and PPC architectures by removing const from visitor return type"}}
{"#689": {"supported/other_fixed": "[#689](https://gitlab.com/libeigen/eigen/-/merge_requests/689): Fixed broadcasting index-out-of-bounds error for vectorized 1-dimensional inputs, particularly for std::complex types"}}
{"#698": {"supported/major_changes": "[#698](https://gitlab.com/libeigen/eigen/-/merge_requests/698): Optimizes `CommaInitializer` to reuse fixed dimensions more efficiently during matrix block initialization"}}
{"#695": {"unsupported/other_fixed": "[#695](https://gitlab.com/libeigen/eigen/-/merge_requests/695): Fix compilation compatibility issue with older Boost versions in boostmultiprec test"}}
{"#681": {"unsupported/major_changes": "[#681](https://gitlab.com/libeigen/eigen/-/merge_requests/681): Prevents integer overflows in EigenMetaKernel indexing for CUDA tensor operations"}}
{"#701": {"supported/other_improved": "[#701](https://gitlab.com/libeigen/eigen/-/merge_requests/701): Move alignment qualifier to improve consistency and resolve compiler warnings"}}
{"#700": {"supported/other_improved": "[#700](https://gitlab.com/libeigen/eigen/-/merge_requests/700): Vectorized tanh and logistic functions for fp16 on Neon, improving computational performance"}}
{"#694": {"supported/other_fixed": "[#694](https://gitlab.com/libeigen/eigen/-/merge_requests/694): Fixed ZVector build issues for s390x cross-compilation, enabling packetmath tests under QEMU"}}
{"#534": {"unsupported/major_changes": "[#534](https://gitlab.com/libeigen/eigen/-/merge_requests/534): Introduces preliminary HIP bfloat16 GPU support for AMD GPUs"}}
{"#697": {"supported/other_improved": "[#697](https://gitlab.com/libeigen/eigen/-/merge_requests/697): Optimize CMake scripts to improve Eigen subproject integration and reduce default test build overhead"}}
{"#703": {"supported/other_fixed": "[#703](https://gitlab.com/libeigen/eigen/-/merge_requests/703): Fix NaN propagation in min/max functions with scalar inputs"}}
{"#702": {"supported/major_changes": "[#702](https://gitlab.com/libeigen/eigen/-/merge_requests/702): Added AVX vectorized implementation for float2half/half2float conversion functions with significant performance improvements"}}
{"#680": {"supported/other_fixed": "[#680](https://gitlab.com/libeigen/eigen/-/merge_requests/680): Fixed PowerPC packing issue, correcting row and depth inversion in non-vectorized code with 10% performance improvement"}}
{"#705": {"unsupported/other_fixed": "[#705](https://gitlab.com/libeigen/eigen/-/merge_requests/705): Fixes TensorReduction test warnings and improves sum accuracy error bound calculation"}}
{"#704": {"unsupported/breaking_changes": "[#704](https://gitlab.com/libeigen/eigen/-/merge_requests/704): Removed problematic `take<n, numeric_list<T>>` implementation to resolve g++-11 compiler crash"}}
{"#707": {"supported/other_fixed": "[#707](https://gitlab.com/libeigen/eigen/-/merge_requests/707): Fixed total deflation issue in BDCSVD for diagonal matrices"}}
{"#709": {"supported/other_fixed": "[#709](https://gitlab.com/libeigen/eigen/-/merge_requests/709): Fixed BDCSVD total deflation logic to correctly handle diagonal matrices"}}
{"#714": {"supported/other_fixed": "[#714](https://gitlab.com/libeigen/eigen/-/merge_requests/714): Fixed uninitialized matrix issue to prevent potential computation errors"}}
{"#712": {"supported/other_improved": "[#712](https://gitlab.com/libeigen/eigen/-/merge_requests/712): Improved documentation for Quaternion constructor from MatrixBase, clarifying element order and usage"}}
{"#711": {"supported/other_fixed": "[#711](https://gitlab.com/libeigen/eigen/-/merge_requests/711): Bug fix for incorrect definition of EIGEN_HAS_FP16_C macro across different compilers"}}
{"#715": {"unsupported/other_fixed": "[#715](https://gitlab.com/libeigen/eigen/-/merge_requests/715): Fixed failing test for tensor reduction by improving error bound comparisons"}}
{"#713": {"supported/other_fixed": "[#713](https://gitlab.com/libeigen/eigen/-/merge_requests/713): Prevent integer overflow in EigenMetaKernel indexing for improved reliability, especially on Windows builds"}}
{"#121": {"supported/other_added": "[#121](https://gitlab.com/libeigen/eigen/-/merge_requests/121): Added a `make format` command to enforce consistent code styling across the project"}}
{"#720": {"supported/other_improved": "[#720](https://gitlab.com/libeigen/eigen/-/merge_requests/720): Fixed a documentation typo to improve clarity"}}
{"#716": {"supported/other_improved": "[#716](https://gitlab.com/libeigen/eigen/-/merge_requests/716): Converted diagnostic pragmas to standardized nv_diag format, improving code consistency and maintainability"}}
{"#717": {"supported/other_improved": "[#717](https://gitlab.com/libeigen/eigen/-/merge_requests/717): Moved pruning code from CompressedStorage to SparseVector.h to improve code organization"}}
{"#718": {"supported/other_improved": "[#718](https://gitlab.com/libeigen/eigen/-/merge_requests/718): Update SparseMatrix::Map and TransposedSparseMatrix to use consistent StorageIndex across implementations"}}
{"#327": {"unsupported/major_changes": "[#327](https://gitlab.com/libeigen/eigen/-/merge_requests/327): Reimplemented Tensor stream output with new predefined formats and improved IO functionality"}}
{"#723": {"unsupported/other_fixed": "[#723](https://gitlab.com/libeigen/eigen/-/merge_requests/723): Fixed off-by-one error in tensor broadcasting affecting packet size handling"}}
{"#722": {"supported/other_improved": "[#722](https://gitlab.com/libeigen/eigen/-/merge_requests/722): Optimized Umeyama algorithm computation by conditionally skipping unnecessary scaling calculations"}}
{"#724": {"unsupported/other_improved": "[#724](https://gitlab.com/libeigen/eigen/-/merge_requests/724): Improved TensorIO compatibility with TensorMap containing const elements"}}
{"#719": {"supported/other_fixed": "[#719](https://gitlab.com/libeigen/eigen/-/merge_requests/719): Fixed Sparse-Sparse product implementation for mixed StorageIndex types"}}
{"#728": {"supported/other_fixed": "[#728](https://gitlab.com/libeigen/eigen/-/merge_requests/728): Fixed compilation errors for Windows build systems"}}
{"#726": {"supported/other_improved": "[#726](https://gitlab.com/libeigen/eigen/-/merge_requests/726): Added basic iterator support for Eigen::array to simplify array usage and transition from std::array"}}
{"#725": {"supported/breaking_changes": "[#725](https://gitlab.com/libeigen/eigen/-/merge_requests/725): Removed deprecated MappedSparseMatrix type from internal library code"}}
{"#727": {"supported/other_improved": "[#727](https://gitlab.com/libeigen/eigen/-/merge_requests/727): Made numeric_limits members constexpr for improved compile-time evaluation"}}
{"#729": {"supported/other_added": "[#729](https://gitlab.com/libeigen/eigen/-/merge_requests/729): Implemented `reverse_iterator` for `Eigen::array<...>` to enhance iteration capabilities"}}
{"#733": {"supported/other_fixed": "[#733](https://gitlab.com/libeigen/eigen/-/merge_requests/733): Fixed warnings about shadowing definitions to improve code clarity and maintainability"}}
{"#732": {"supported/major_changes": "[#732](https://gitlab.com/libeigen/eigen/-/merge_requests/732): Removes EIGEN_HAS_CXX11 macro, simplifying Eigen's codebase and focusing on C++11+ support"}}
{"#737": {"supported/other_improved": "[#737](https://gitlab.com/libeigen/eigen/-/merge_requests/737): Refactored Lapacke LLT macro binding to improve code clarity and maintainability"}}
{"#740": {"supported/other_removed": "[#740](https://gitlab.com/libeigen/eigen/-/merge_requests/740): Removed redundant `nonZeros()` method from `DenseBase` class, which simply called `size()`"}}
{"#741": {"supported/other_fixed": "[#741](https://gitlab.com/libeigen/eigen/-/merge_requests/741): Fixes HIP compilation failure in DenseBase by adding appropriate EIGEN_DEVICE_FUNC modifiers"}}
{"#735": {"supported/other_improved": "[#735](https://gitlab.com/libeigen/eigen/-/merge_requests/735): Simplified C++11 feature checks by removing redundant macros and compiler version checks"}}
{"#742": {"supported/breaking_changes": "[#742](https://gitlab.com/libeigen/eigen/-/merge_requests/742): Updates minimum CMake version to 3.10, removes C++11 test disable option, and sets minimum GCC version to 5"}}
{"#658": {"supported/breaking_changes": "[#658](https://gitlab.com/libeigen/eigen/-/merge_requests/658): Refactored SVD module with new template parameter for computation options, breaking existing API"}}
{"#734": {"supported/other_improved": "[#734](https://gitlab.com/libeigen/eigen/-/merge_requests/734): Improved AVX2 optimization selection for non-multiple-of-8 data sizes"}}
{"#730": {"unsupported/other_fixed": "[#730](https://gitlab.com/libeigen/eigen/-/merge_requests/730): Fixed stride computation for indexed views with non-Eigen index types to prevent potential signed integer overflow"}}
{"#736": {"supported/major_changes": "[#736](https://gitlab.com/libeigen/eigen/-/merge_requests/736): SFINAE improvements for transpose methods in self-adjoint and triangular views"}}
{"#745": {"supported/other_fixed": "[#745](https://gitlab.com/libeigen/eigen/-/merge_requests/745): Fixed HIP compilation issues in selfAdjoint and triangular view classes"}}
{"#746": {"supported/other_fixed": "[#746](https://gitlab.com/libeigen/eigen/-/merge_requests/746): Fixed handling of 0-sized matrices in LAPACKE-based Cholesky decomposition"}}
{"#749": {"supported/breaking_changes": "[#749](https://gitlab.com/libeigen/eigen/-/merge_requests/749): Reverts disruptive SVD module update that caused compatibility issues with third-party libraries"}}
{"#744": {"supported/breaking_changes": "[#744](https://gitlab.com/libeigen/eigen/-/merge_requests/744): Updated compiler requirements by removing deprecated feature test macros and enforcing newer GCC and MSVC versions"}}
{"#739": {"supported/other_changes": "[#739](https://gitlab.com/libeigen/eigen/-/merge_requests/739): Disabled tests for GCC-4.8 to facilitate transition to C++14"}}
{"#752": {"supported/other_removed": "[#752](https://gitlab.com/libeigen/eigen/-/merge_requests/752): Deprecated unused macro EIGEN_GPU_TEST_C99_MATH to reduce code clutter"}}
{"#748": {"supported/other_improved": "[#748](https://gitlab.com/libeigen/eigen/-/merge_requests/748): Improved Lapacke bindings for HouseholderQR and PartialPivLU by replacing macros with C++ code and extracting common binding logic"}}
{"#755": {"unsupported/other_fixed": "[#755](https://gitlab.com/libeigen/eigen/-/merge_requests/755): Fixed leftover else branch in unsupported code"}}
{"#447": {"supported/other_added": "[#447](https://gitlab.com/libeigen/eigen/-/merge_requests/447): Introduces BiCGSTAB(L) algorithm for solving linear systems with potential improvements for non-symmetric systems"}}
{"#757": {"supported/other_improved": "[#757](https://gitlab.com/libeigen/eigen/-/merge_requests/757): Refactored IDRS code, replacing `norm()` with `StableNorm()` to improve code stability and numerical performance"}}
{"#756": {"supported/other_improved": "[#756](https://gitlab.com/libeigen/eigen/-/merge_requests/756): Conditional inclusion of <atomic> header to improve compatibility with toolchains lacking atomic operations support"}}
{"#759": {"supported/other_fixed": "[#759](https://gitlab.com/libeigen/eigen/-/merge_requests/759): Fixed typo of `StableNorm` to `stableNorm` in IDRS.h file"}}
{"#762": {"supported/other_fixed": "[#762](https://gitlab.com/libeigen/eigen/-/merge_requests/762): Fixed documentation code snippets to improve accuracy and readability"}}
{"#761": {"supported/other_improved": "[#761](https://gitlab.com/libeigen/eigen/-/merge_requests/761): Cleanup of obsolete compiler checks and flags, streamlining the codebase and reducing maintenance overhead"}}
{"#577": {"unsupported/major_changes": "[#577](https://gitlab.com/libeigen/eigen/-/merge_requests/577): Introduces IDR(s)STAB(l) method, a new iterative solver for sparse matrix problems combining features of IDR(s) and BiCGSTAB(l)"}}
{"#765": {"supported/other_fixed": "[#765](https://gitlab.com/libeigen/eigen/-/merge_requests/765): Resolved Clang compiler ambiguity in index list overloads to improve code stability"}}
{"#760": {"supported/other_improved": "[#760](https://gitlab.com/libeigen/eigen/-/merge_requests/760): Removed `using namespace Eigen` from sample code to promote better coding practices"}}
{"#767": {"supported/other_improved": "[#767](https://gitlab.com/libeigen/eigen/-/merge_requests/767): Improved `exp()` function behavior for `-Inf` arguments in vectorized expressions with performance optimizations"}}
{"#758": {"supported/other_added": "[#758](https://gitlab.com/libeigen/eigen/-/merge_requests/758): Added GPU unit tests for HIP using C++14, improving testing for GPU functionalities"}}
{"#763": {"supported/other_improved": "[#763](https://gitlab.com/libeigen/eigen/-/merge_requests/763): Cleaned up CMake scripts by removing deprecated `COMPILE_FLAGS` and adopting modern `target_compile_options`"}}
{"#768": {"supported/other_removed": "[#768](https://gitlab.com/libeigen/eigen/-/merge_requests/768): Removed custom Find*.cmake scripts for BLAS, LAPACK, GLEW, and GSL, now using CMake's built-in modules"}}
{"#770": {"unsupported/other_fixed": "[#770](https://gitlab.com/libeigen/eigen/-/merge_requests/770): Fixed customIndices2Array function to correctly handle the first index in tensor module"}}
{"#769": {"supported/other_fixed": "[#769](https://gitlab.com/libeigen/eigen/-/merge_requests/769): Fixed header inclusion issues in CholmodSupport to prevent direct access to internal files"}}
{"#753": {"supported/other_improved": "[#753](https://gitlab.com/libeigen/eigen/-/merge_requests/753): Convert computational macros to type-safe constexpr functions for improved code quality"}}
{"#774": {"supported/other_improved": "[#774](https://gitlab.com/libeigen/eigen/-/merge_requests/774): Fixes for enabling HIP unit tests and updating CMake compatibility"}}
{"#776": {"supported/other_improved": "[#776](https://gitlab.com/libeigen/eigen/-/merge_requests/776): Improved CMake handling of `EIGEN_TEST_CUSTOM_CXX_FLAGS` by converting spaces to semicolons"}}
{"#773": {"supported/other_improved": "[#773](https://gitlab.com/libeigen/eigen/-/merge_requests/773): Optimized row-major sparse-dense matrix product implementation with two accumulation variables to improve computational efficiency"}}
{"#782": {"supported/other_fixed": "[#782](https://gitlab.com/libeigen/eigen/-/merge_requests/782): Fix a bug with the EIGEN_IMPLIES macro's side-effects introduced in a previous merge request"}}
{"#783": {"supported/other_improved": "[#783](https://gitlab.com/libeigen/eigen/-/merge_requests/783): Simplified `logical_xor()` implementation for bool types, improving code clarity and efficiency"}}
{"#785": {"supported/other_fixed": "[#785](https://gitlab.com/libeigen/eigen/-/merge_requests/785): Fixed Clang warnings related to alignment and floating-point precision"}}
{"#786": {"supported/other_improved": "[#786](https://gitlab.com/libeigen/eigen/-/merge_requests/786): Small cleanup of GDB pretty printer code, improving code readability and maintenance"}}
{"#788": {"supported/other_improved": "[#788](https://gitlab.com/libeigen/eigen/-/merge_requests/788): Small documentation and code quality improvements, including fixing warnings and documentation formatting"}}
{"#789": {"supported/other_fixed": "[#789](https://gitlab.com/libeigen/eigen/-/merge_requests/789): Fixed inclusion of immintrin.h for F16C intrinsics when vectorization is disabled"}}
{"#790": {"supported/other_improved": "[#790](https://gitlab.com/libeigen/eigen/-/merge_requests/790): Added missing internal namespace qualifiers to vectorization logic tests"}}
{"#779": {"supported/other_improved": "[#779](https://gitlab.com/libeigen/eigen/-/merge_requests/779): Optimize `exp<float>()` with reduced polynomial degree, expanded denormal range, and 4% speedup for AVX2"}}
{"#793": {"supported/other_removed": "[#793](https://gitlab.com/libeigen/eigen/-/merge_requests/793): Removed unused `EIGEN_HAS_STATIC_ARRAY_TEMPLATE` macro to clean up the codebase"}}
{"#794": {"supported/other_fixed": "[#794](https://gitlab.com/libeigen/eigen/-/merge_requests/794): Fixed header guard conflicts between AltiVec and ZVector packages"}}
{"#797": {"supported/other_improved": "[#797](https://gitlab.com/libeigen/eigen/-/merge_requests/797): Adds bounds checking to Eigen serializer to improve data integrity and prevent out-of-bounds access"}}
{"#771": {"supported/breaking_changes": "[#771](https://gitlab.com/libeigen/eigen/-/merge_requests/771): Renamed internal `size` function to `ssize` to prevent ADL conflicts and improve C++ standard compatibility"}}
{"#800": {"supported/other_fixed": "[#800](https://gitlab.com/libeigen/eigen/-/merge_requests/800): Fixes serialization API issues disrupting HIP GPU unit tests"}}
{"#792": {"supported/other_improved": "[#792](https://gitlab.com/libeigen/eigen/-/merge_requests/792): Enables manual specification of inner and outer strides for CWiseUnaryView, enhancing stride control and flexibility"}}
{"#799": {"supported/other_improved": "[#799](https://gitlab.com/libeigen/eigen/-/merge_requests/799): Performance improvement for logarithm function with 20% speedup for float and better denormal handling"}}
{"#802": {"supported/other_fixed": "[#802](https://gitlab.com/libeigen/eigen/-/merge_requests/802): Fixed improper truncation of unsigned int to bool, improving type conversion reliability"}}
{"#801": {"supported/other_fixed": "[#801](https://gitlab.com/libeigen/eigen/-/merge_requests/801): Fixes and cleanups for BFloat16 and Half numeric_limits, including AVX `psqrt` function workaround"}}
{"#791": {"supported/other_improved": "[#791](https://gitlab.com/libeigen/eigen/-/merge_requests/791): Added support for Cray, Fujitsu, and Intel ICX compilers with new preprocessor macros"}}
{"#796": {"supported/major_changes": "[#796](https://gitlab.com/libeigen/eigen/-/merge_requests/796): Makes fixed-size Matrix and Array trivially copyable in C++20, improving memory management and compatibility"}}
{"#803": {"supported/other_fixed": "[#803](https://gitlab.com/libeigen/eigen/-/merge_requests/803): Fixed GCC 8.5 warning about missing base class initialization"}}
{"#805": {"supported/other_fixed": "[#805](https://gitlab.com/libeigen/eigen/-/merge_requests/805): Fixed inconsistency in scalar and vectorized paths for array.exp() function"}}
{"#780": {"supported/other_improved": "[#780](https://gitlab.com/libeigen/eigen/-/merge_requests/780): Improved accuracy and performance of logistic sigmoid function implementation, reducing maximum relative error and extending computational range"}}
{"#806": {"supported/other_fixed": "[#806](https://gitlab.com/libeigen/eigen/-/merge_requests/806): Fix assertion messages in IterativeSolverBase to correctly reference its own class name"}}
{"#795": {"supported/other_improved": "[#795](https://gitlab.com/libeigen/eigen/-/merge_requests/795): Refactored identifiers to reduce usage of reserved names in compliance with C++ standard guidelines"}}
{"#808": {"supported/breaking_changes": "[#808](https://gitlab.com/libeigen/eigen/-/merge_requests/808): Introduces explicit type casting requirements for `pmadd` function to improve type safety and compatibility with custom scalar types"}}
{"#810": {"supported/other_fixed": "[#810](https://gitlab.com/libeigen/eigen/-/merge_requests/810): Fixed two corner cases in logistic sigmoid implementation for improved accuracy and robustness"}}
{"#809": {"supported/other_fixed": "[#809](https://gitlab.com/libeigen/eigen/-/merge_requests/809): Fixed broken assertions to improve runtime error checking and library reliability"}}
{"#811": {"supported/other_fixed": "[#811](https://gitlab.com/libeigen/eigen/-/merge_requests/811): Fixed compilation issue with GCC < 10 and -std=c++2a standard"}}
{"#764": {"supported/major_changes": "[#764](https://gitlab.com/libeigen/eigen/-/merge_requests/764): Performance improvements for VSX and MMA GEMV operations on PowerPC, with up to 4X speedup"}}
{"#812": {"supported/other_fixed": "[#812](https://gitlab.com/libeigen/eigen/-/merge_requests/812): Fix implicit conversion warning in vectorwise_reverse_inplace function by adding explicit casting"}}
{"#814": {"supported/other_improved": "[#814](https://gitlab.com/libeigen/eigen/-/merge_requests/814): Updated comments to remove references to outdated macro and improve code clarity"}}
{"#813": {"supported/other_improved": "[#813](https://gitlab.com/libeigen/eigen/-/merge_requests/813): Corrected and clarified documentation for Least Squares Conjugate Gradient (LSCG) solver, improving mathematical descriptions and user understanding"}}
{"#815": {"supported/other_fixed": "[#815](https://gitlab.com/libeigen/eigen/-/merge_requests/815): Fixed implicit conversion warning in GEBP kernel's packing by changing variable types from `int` to `Index`"}}
{"#816": {"supported/other_improved": "[#816](https://gitlab.com/libeigen/eigen/-/merge_requests/816): Port EIGEN_OPTIMIZATION_BARRIER to support soft float ARM architectures"}}
{"#819": {"supported/other_improved": "[#819](https://gitlab.com/libeigen/eigen/-/merge_requests/819): Enhance clang warning suppressions by checking for supported warnings before applying suppressions"}}
{"#818": {"supported/other_fixed": "[#818](https://gitlab.com/libeigen/eigen/-/merge_requests/818): Silenced specific MSVC compiler warnings in `construct_elements_of_array()` function"}}
{"#772": {"supported/other_improved": "[#772](https://gitlab.com/libeigen/eigen/-/merge_requests/772): Cleanup of internal macros and sequence implementations to simplify codebase"}}
{"#817": {"supported/major_changes": "[#817](https://gitlab.com/libeigen/eigen/-/merge_requests/817): Added support for int64 packets on x86 architectures, enabling more efficient vectorized operations"}}
{"#821": {"supported/other_improved": "[#821](https://gitlab.com/libeigen/eigen/-/merge_requests/821): Prevent unnecessary heap allocation in diagonal product by setting NestByRefBit for more efficient memory management"}}
{"#820": {"supported/major_changes": "[#820](https://gitlab.com/libeigen/eigen/-/merge_requests/820): Added reciprocal packet operation with optimized SSE, AVX, and AVX512 specializations for float, improving computational performance and accuracy"}}
{"#822": {"supported/other_fixed": "[#822](https://gitlab.com/libeigen/eigen/-/merge_requests/822): Fixed potential overflow issue in random test by making casts explicit and adjusting variable types"}}
{"#824": {"supported/major_changes": "[#824](https://gitlab.com/libeigen/eigen/-/merge_requests/824): Removed inline assembly for FMA (AVX) and added new packet operations pmsub, pnmadd, and pnmsub with performance improvements"}}
{"#825": {"supported/other_improved": "[#825](https://gitlab.com/libeigen/eigen/-/merge_requests/825): Introduced utility functions to reduce floating-point warnings and improve comparison precision"}}
{"#827": {"supported/major_changes": "[#827](https://gitlab.com/libeigen/eigen/-/merge_requests/827): Optimized precipitation function implementation with IEEE compliance for 1/0 and 1/inf cases, improving performance and handling of special mathematical scenarios"}}
{"#828": {"supported/other_fixed": "[#828](https://gitlab.com/libeigen/eigen/-/merge_requests/828): Fixed GEMV cache overflow issue for PowerPC architecture"}}
{"#830": {"supported/other_improved": "[#830](https://gitlab.com/libeigen/eigen/-/merge_requests/830): Removed documentation referencing obsolete C++98/C++03 standards"}}
{"#826": {"supported/breaking_changes": "[#826](https://gitlab.com/libeigen/eigen/-/merge_requests/826): Significant updates to SVD module with new Options template parameter, introducing API breaking changes for improved flexibility"}}
{"#835": {"supported/other_fixed": "[#835](https://gitlab.com/libeigen/eigen/-/merge_requests/835): Fixed ODR violations by removing unnamed namespaces and internal linkage from header files"}}
{"#832": {"supported/other_improved": "[#832](https://gitlab.com/libeigen/eigen/-/merge_requests/832): Improved AVX512 math function consistency and ICC compatibility for more reliable mathematical computations"}}
{"#833": {"supported/other_fixed": "[#833](https://gitlab.com/libeigen/eigen/-/merge_requests/833): Fixes type discrepancy in 32-bit ARM platforms by replacing `int` with `int32_t` for proper bit pattern extraction"}}
{"#840": {"supported/breaking_changes": "[#840](https://gitlab.com/libeigen/eigen/-/merge_requests/840): Fixed CUDA feature flag handling to respect `EIGEN_NO_CUDA` compilation option"}}
{"#838": {"supported/other_improved": "[#838](https://gitlab.com/libeigen/eigen/-/merge_requests/838): Corrected definition of EIGEN_HAS_AVX512_MATH in PacketMath to improve AVX512 math capabilities"}}
{"#836": {"supported/other_improved": "[#836](https://gitlab.com/libeigen/eigen/-/merge_requests/836): Refined compiler-specific `maxpd` workaround to target only GCC<6.3"}}
{"#841": {"supported/other_improved": "[#841](https://gitlab.com/libeigen/eigen/-/merge_requests/841): Consolidated and improved generic implementations of psqrt and prsqrt functions with correct handling of special cases"}}
{"#844": {"supported/other_improved": "[#844](https://gitlab.com/libeigen/eigen/-/merge_requests/844): Updated MPL2 license link to use HTTPS for improved security"}}
{"#843": {"supported/other_fixed": "[#843](https://gitlab.com/libeigen/eigen/-/merge_requests/843): Fixed naming collision with resolve.h by renaming local variables"}}
{"#842": {"supported/other_fixed": "[#842](https://gitlab.com/libeigen/eigen/-/merge_requests/842): Fixed documentation typo in Complete Orthogonal Decomposition (COD) method reference"}}
{"#845": {"supported/other_improved": "[#845](https://gitlab.com/libeigen/eigen/-/merge_requests/845): Improved numeric_limits implementation to ensure One Definition Rule (ODR) compliance and enhance static data member definitions"}}
{"#846": {"supported/other_improved": "[#846](https://gitlab.com/libeigen/eigen/-/merge_requests/846): Optimize performance by returning alphas() and betas() vectors as const references"}}
{"#847": {"supported/other_fixed": "[#847](https://gitlab.com/libeigen/eigen/-/merge_requests/847): Cleaned up compiler warnings for PowerPC GEMM and GEMV implementations"}}
{"#849": {"supported/other_improved": "[#849](https://gitlab.com/libeigen/eigen/-/merge_requests/849): Improved documentation for MatrixXNt and MatrixNXt matrix patterns and fixed documentation compilation issues"}}
{"#852": {"supported/other_added": "[#852](https://gitlab.com/libeigen/eigen/-/merge_requests/852): Adds convenience `constexpr std::size_t size() const` method to `Eigen::IndexList`"}}
{"#853": {"unsupported/other_fixed": "[#853](https://gitlab.com/libeigen/eigen/-/merge_requests/853): Resolved ODR failures in TensorRandom component to improve code stability and reliability"}}
{"#855": {"supported/other_removed": "[#855](https://gitlab.com/libeigen/eigen/-/merge_requests/855): Removed unused macros related to `prsqrt` implementation, improving code clarity and maintainability"}}
{"#859": {"supported/other_fixed": "[#859](https://gitlab.com/libeigen/eigen/-/merge_requests/859): Fixed MSVC+NVCC 9.2 pragma compatibility issue by replacing `_Pragma` with `__pragma`"}}
{"#858": {"supported/other_fixed": "[#858](https://gitlab.com/libeigen/eigen/-/merge_requests/858): Fixed sqrt/rsqrt implementations for NEON with improved accuracy and special case handling"}}
{"#850": {"supported/other_improved": "[#850](https://gitlab.com/libeigen/eigen/-/merge_requests/850): Added descriptive comments to Matrix typedefs to improve Doxygen documentation"}}
{"#857": {"supported/breaking_changes": "[#857](https://gitlab.com/libeigen/eigen/-/merge_requests/857): Reintroduced `svd::compute(Matrix, options)` method to prevent breaking external projects"}}
{"#861": {"supported/other_improved": "[#861](https://gitlab.com/libeigen/eigen/-/merge_requests/861): Improved FixedInt constexpr support and resolved potential ODR violations"}}
{"#862": {"supported/breaking_changes": "[#862](https://gitlab.com/libeigen/eigen/-/merge_requests/862): Restores fixed sizes for U/V matrices in matrix decompositions for fixed-sized inputs"}}
{"#866": {"supported/other_fixed": "[#866](https://gitlab.com/libeigen/eigen/-/merge_requests/866): Fix crash bug in SPQRSupport by initializing pointers to nullptr to prevent invalid memory access"}}
{"#869": {"supported/other_improved": "[#869](https://gitlab.com/libeigen/eigen/-/merge_requests/869): Improved SYCL support by simplifying CMake configuration and enhancing compatibility with C++ versions"}}
{"#870": {"supported/other_fixed": "[#870](https://gitlab.com/libeigen/eigen/-/merge_requests/870): Fixed test macro conflicts with STL headers in C++20 for GCC 9-11"}}
{"#865": {"supported/other_fixed": "[#865](https://gitlab.com/libeigen/eigen/-/merge_requests/865): Added assertion for edge case when requesting thin unitaries with incompatible matrix dimensions"}}
{"#863": {"supported/other_fixed": "[#863](https://gitlab.com/libeigen/eigen/-/merge_requests/863): Modified test expression to avoid numerical differences during optimization"}}
{"#868": {"supported/major_changes": "[#868](https://gitlab.com/libeigen/eigen/-/merge_requests/868): Optimized SQRT/RSQRT implementations for modern x86 processors with improved performance and special value handling"}}
{"#873": {"supported/other_fixed": "[#873](https://gitlab.com/libeigen/eigen/-/merge_requests/873): Disabled deprecated warnings in SVD tests to clean up build logs"}}
{"#874": {"supported/other_fixed": "[#874](https://gitlab.com/libeigen/eigen/-/merge_requests/874): Fixed gcc-5 packetmath_12 bug with memory initialization in `packetmath_minus_zero_add()`"}}
{"#875": {"supported/other_fixed": "[#875](https://gitlab.com/libeigen/eigen/-/merge_requests/875): Fixed compilation error in packetmath by introducing a wrapper struct for `psqrt` function"}}
{"#877": {"supported/other_fixed": "[#877](https://gitlab.com/libeigen/eigen/-/merge_requests/877): Disabled deprecated warnings for SVD tests on MSVC to improve build log clarity"}}
{"#878": {"supported/other_fixed": "[#878](https://gitlab.com/libeigen/eigen/-/merge_requests/878): Fixed frexp packetmath tests for MSVC to handle non-finite input exponent behavior"}}
{"#876": {"supported/other_fixed": "[#876](https://gitlab.com/libeigen/eigen/-/merge_requests/876): Fixed AVX512 instruction handling and complex type computation issues for g++-11"}}
{"#880": {"supported/major_changes": "[#880](https://gitlab.com/libeigen/eigen/-/merge_requests/880): Fix critical SVD functionality bug for Microsoft Visual Studio (MSVC) compilation"}}
{"#879": {"supported/other_improved": "[#879](https://gitlab.com/libeigen/eigen/-/merge_requests/879): Improved efficiency of any/all reduction operations for row-major matrix layouts"}}
{"#882": {"supported/other_fixed": "[#882](https://gitlab.com/libeigen/eigen/-/merge_requests/882): Fixed SVD compatibility issues for MSVC and CUDA by resolving Index type and function return warnings"}}
{"#883": {"supported/other_fixed": "[#883](https://gitlab.com/libeigen/eigen/-/merge_requests/883): Adjusted matrix_power test tolerance for MSVC to reduce test failures"}}
{"#872": {"supported/other_improved": "[#872](https://gitlab.com/libeigen/eigen/-/merge_requests/872): Improved sqrt/rsqrt handling of denormal numbers and performance optimizations for AVX512"}}
{"#884": {"supported/other_improved": "[#884](https://gitlab.com/libeigen/eigen/-/merge_requests/884): Simplified non-convergence checks in NonLinearOptimization tests to improve test reliability across different architectures"}}
{"#886": {"supported/other_fixed": "[#886](https://gitlab.com/libeigen/eigen/-/merge_requests/886): Fixed denormal test to skip when condition is false"}}
{"#885": {"supported/other_fixed": "[#885](https://gitlab.com/libeigen/eigen/-/merge_requests/885): Fixed enum conversion warnings in BooleanRedux component"}}
{"#888": {"supported/other_improved": "[#888](https://gitlab.com/libeigen/eigen/-/merge_requests/888): Optimized least_square_conjugate_gradient() performance using .noalias() to reduce temporary allocations"}}
{"#851": {"supported/other_fixed": "[#851](https://gitlab.com/libeigen/eigen/-/merge_requests/851): Fixed JacobiSVD_LAPACKE bindings to align with SVD module runtime options"}}
{"#887": {"supported/other_improved": "[#887](https://gitlab.com/libeigen/eigen/-/merge_requests/887): Enhance vectorization logic tests for improved cross-platform compatibility and test reliability"}}
{"#864": {"supported/other_improved": "[#864](https://gitlab.com/libeigen/eigen/-/merge_requests/864): Cleaned up unnecessary EIGEN_UNUSED decorations to improve code clarity and maintainability"}}
{"#890": {"supported/other_improved": "[#890](https://gitlab.com/libeigen/eigen/-/merge_requests/890): Removed duplicate IsRowMajor declaration to reduce compilation warnings and improve code clarity"}}
{"#891": {"supported/other_improved": "[#891](https://gitlab.com/libeigen/eigen/-/merge_requests/891): Optimized SVD test memory consumption by splitting and reducing test matrix sizes"}}
{"#893": {"supported/other_improved": "[#893](https://gitlab.com/libeigen/eigen/-/merge_requests/893): Adds new CMake configuration options for more flexible build control of Eigen library components"}}
{"#894": {"unsupported/other_fixed": "[#894](https://gitlab.com/libeigen/eigen/-/merge_requests/894): Fixed tensor executor test and added support for tensor packets of size 1"}}
{"#856": {"supported/major_changes": "[#856](https://gitlab.com/libeigen/eigen/-/merge_requests/856): Adds support for Apple's Accelerate sparse matrix solvers with significant performance improvements for various factorization methods"}}
{"#897": {"supported/other_removed": "[#897](https://gitlab.com/libeigen/eigen/-/merge_requests/897): Removed obsolete gcc 4.3 copy_bool workaround in testsuite"}}
{"#895": {"supported/other_improved": "[#895](https://gitlab.com/libeigen/eigen/-/merge_requests/895): Added move constructors to SparseSolverBase and IterativeSolverBase for improved solver object management"}}
{"#889": {"supported/other_improved": "[#889](https://gitlab.com/libeigen/eigen/-/merge_requests/889): Introduced `construct_at` and `destroy_at` wrappers, improving code clarity and modernizing memory management practices throughout Eigen"}}
{"#898": {"unsupported/other_fixed": "[#898](https://gitlab.com/libeigen/eigen/-/merge_requests/898): Fixed zeta function edge case for large inputs, preventing NaN and overflow issues"}}
{"#896": {"unsupported/other_improved": "[#896](https://gitlab.com/libeigen/eigen/-/merge_requests/896): Removed ComputeCpp-specific code from SYCL Vptr, improving compatibility and performance"}}
{"#901": {"supported/other_fixed": "[#901](https://gitlab.com/libeigen/eigen/-/merge_requests/901): Fixed `construct_at` compilation issue on ROCm/HIP environments"}}
{"#902": {"unsupported/other_fixed": "[#902](https://gitlab.com/libeigen/eigen/-/merge_requests/902): Temporarily disabled aarch64 CI due to unavailable Windows on Arm machines"}}
{"#900": {"supported/other_fixed": "[#900](https://gitlab.com/libeigen/eigen/-/merge_requests/900): Fix swap test for size 1 matrix inputs to prevent assertion failures"}}
{"#903": {"supported/other_improved": "[#903](https://gitlab.com/libeigen/eigen/-/merge_requests/903): Replaces enum with constexpr for floating point bit size calculations, reducing type casts and improving code readability"}}
{"#907": {"supported/other_improved": "[#907](https://gitlab.com/libeigen/eigen/-/merge_requests/907): Enhances PowerPC MMA build options with dynamic dispatch and improved compatibility for Power10 processors"}}
{"#910": {"supported/other_fixed": "[#910](https://gitlab.com/libeigen/eigen/-/merge_requests/910): Reverted previous changes to PowerPC MMA flags to restore stability"}}
{"#909": {"supported/other_improved": "[#909](https://gitlab.com/libeigen/eigen/-/merge_requests/909): Removed outdated GCC-4 warning workarounds, simplifying and improving code maintainability"}}
{"#829": {"supported/major_changes": "[#829](https://gitlab.com/libeigen/eigen/-/merge_requests/829): Replace Eigen type metaprogramming with standard C++ types and alias templates"}}
{"#914": {"supported/other_fixed": "[#914](https://gitlab.com/libeigen/eigen/-/merge_requests/914): Disabled Schur non-convergence test to reduce flaky results and improve reliability"}}
{"#834": {"supported/major_changes": "[#834](https://gitlab.com/libeigen/eigen/-/merge_requests/834): Introduces AVX512 optimized kernels for floating-point triangular solve operations, enhancing performance for smaller matrix sizes"}}
{"#913": {"supported/other_improved": "[#913](https://gitlab.com/libeigen/eigen/-/merge_requests/913): PowerPC MMA build configuration enhancement with dynamic dispatch option"}}
{"#915": {"supported/other_fixed": "[#915](https://gitlab.com/libeigen/eigen/-/merge_requests/915): Fixed missing pound directive to improve compilation and code robustness"}}
{"#917": {"supported/other_fixed": "[#917](https://gitlab.com/libeigen/eigen/-/merge_requests/917): Resolved g++-10 docker compiler optimization issue in geo_orthomethods_4 test"}}
{"#919": {"supported/other_fixed": "[#919](https://gitlab.com/libeigen/eigen/-/merge_requests/919): Fixed a missing parenthesis in the tutorial documentation"}}
{"#911": {"supported/breaking_changes": "[#911](https://gitlab.com/libeigen/eigen/-/merge_requests/911): Fixed critical assumption about RowMajorBit and RowMajor, potentially impacting matrix storage order logic"}}
{"#922": {"supported/other_fixed": "[#922](https://gitlab.com/libeigen/eigen/-/merge_requests/922): Work around MSVC compiler bug dropping `const` qualifier in method definitions"}}
{"#916": {"supported/other_improved": "[#916](https://gitlab.com/libeigen/eigen/-/merge_requests/916): Updated Altivec MMA dynamic dispatch flags to support binary values for improved TensorFlow compatibility"}}
{"#923": {"supported/other_fixed": "[#923](https://gitlab.com/libeigen/eigen/-/merge_requests/923): Fixed AVX512 build compatibility issues with MSVC compiler"}}
{"#925": {"supported/other_fixed": "[#925](https://gitlab.com/libeigen/eigen/-/merge_requests/925): Fixed ODR violation in trsm module by marking specific functions as inline"}}
{"#926": {"supported/other_fixed": "[#926](https://gitlab.com/libeigen/eigen/-/merge_requests/926): Fixed compilation errors by correcting namespace usage in the codebase"}}
{"#927": {"supported/other_improved": "[#927](https://gitlab.com/libeigen/eigen/-/merge_requests/927): Update warning suppression techniques for improved compiler compatibility"}}
{"#921": {"supported/other_improved": "[#921](https://gitlab.com/libeigen/eigen/-/merge_requests/921): Optimized visitor traversal for RowMajor inputs, improving matrix operation performance"}}
{"#929": {"supported/other_improved": "[#929](https://gitlab.com/libeigen/eigen/-/merge_requests/929): Split general matrix-vector product interface for Power architectures to improve TensorFlow compatibility"}}
{"#798": {"unsupported/other_added": "[#798](https://gitlab.com/libeigen/eigen/-/merge_requests/798): Adds a Non-Negative Least Squares (NNLS) solver to Eigen's unsupported modules using an active-set algorithm"}}
{"#918": {"supported/other_fixed": "[#918](https://gitlab.com/libeigen/eigen/-/merge_requests/918): Added missing explicit reinterprets for `_mm512_shuffle_f32x4` to resolve g++ build errors"}}
{"#930": {"supported/other_fixed": "[#930](https://gitlab.com/libeigen/eigen/-/merge_requests/930): Fixed compilation issue in GCC 9 by adding missing typename and removing unused typedef"}}
{"#931": {"supported/other_improved": "[#931](https://gitlab.com/libeigen/eigen/-/merge_requests/931): Re-enabled Aarch64 CI pipelines to improve testing and validation for Aarch64 architecture"}}
{"#892": {"supported/major_changes": "[#892](https://gitlab.com/libeigen/eigen/-/merge_requests/892): Added support for constant evaluation and improved alignment check assertions"}}
{"#937": {"supported/other_fixed": "[#937](https://gitlab.com/libeigen/eigen/-/merge_requests/937): Eliminates warnings related to unused trace statements, improving code cleanliness"}}
{"#924": {"supported/other_fixed": "[#924](https://gitlab.com/libeigen/eigen/-/merge_requests/924): Disabled f16c scalar conversions for MSVC to prevent compatibility issues"}}
{"#939": {"supported/other_improved": "[#939](https://gitlab.com/libeigen/eigen/-/merge_requests/939): Improved LAPACK module code organization by removing `.cpp` file inclusions"}}
{"#934": {"supported/other_fixed": "[#934](https://gitlab.com/libeigen/eigen/-/merge_requests/934): Fixed order of arguments in BLAS SYRK implementation to resolve compilation errors"}}
{"#941": {"supported/other_improved": "[#941](https://gitlab.com/libeigen/eigen/-/merge_requests/941): Improve scalar test_isApprox handling of inf/nan values"}}
{"#940": {"supported/other_improved": "[#940](https://gitlab.com/libeigen/eigen/-/merge_requests/940): Reintroduced std::remove* aliases to restore compatibility with third-party libraries"}}
{"#854": {"supported/other_improved": "[#854](https://gitlab.com/libeigen/eigen/-/merge_requests/854): Added scaling function overload to handle vector rvalue references, improving diagonal matrix creation from temporary vectors"}}
{"#904": {"supported/other_improved": "[#904](https://gitlab.com/libeigen/eigen/-/merge_requests/904): Converted static const class members to constexpr for improved compile-time efficiency"}}
{"#943": {"supported/other_improved": "[#943](https://gitlab.com/libeigen/eigen/-/merge_requests/943): Enhanced `constexpr` helper functions in `XprHelper.h` to improve compile-time computations and code clarity"}}
{"#936": {"supported/major_changes": "[#936](https://gitlab.com/libeigen/eigen/-/merge_requests/936): Performance improvements for GEMM on Power architecture with vector_pair loads and optimized matrix multiplication"}}
{"#944": {"supported/other_improved": "[#944](https://gitlab.com/libeigen/eigen/-/merge_requests/944): Converted metaprogramming utility to constexpr function for improved compile-time evaluation and code simplification"}}
{"#942": {"unsupported/other_improved": "[#942](https://gitlab.com/libeigen/eigen/-/merge_requests/942): Fixed navbar scroll behavior with table of contents by overriding Doxygen JavaScript"}}
{"#945": {"supported/other_fixed": "[#945](https://gitlab.com/libeigen/eigen/-/merge_requests/945): Restored correct max size expressions that were unintentionally modified in a previous merge request"}}
{"#949": {"supported/other_fixed": "[#949](https://gitlab.com/libeigen/eigen/-/merge_requests/949): Fixed ODR violations in lapacke_helpers module to improve library reliability"}}
{"#948": {"supported/other_fixed": "[#948](https://gitlab.com/libeigen/eigen/-/merge_requests/948): Fix compatibility issues between MSVC and CUDA for diagonal and transpose functionality"}}
{"#946": {"supported/breaking_changes": "[#946](https://gitlab.com/libeigen/eigen/-/merge_requests/946): Removed legacy macro EIGEN_EMPTY_STRUCT_CTOR, potentially impacting older GCC compatibility"}}
{"#953": {"supported/other_fixed": "[#953](https://gitlab.com/libeigen/eigen/-/merge_requests/953): Fixed ambiguous constructors for DiagonalMatrix to prevent compile-time errors with initializer lists"}}
{"#951": {"supported/other_improved": "[#951](https://gitlab.com/libeigen/eigen/-/merge_requests/951): Optimized Power GEMV predux operations for MMA, reducing instruction count and improving compatibility with GCC"}}
{"#952": {"supported/other_improved": "[#952](https://gitlab.com/libeigen/eigen/-/merge_requests/952): Introduced workarounds to allow all tests to pass with `EIGEN_TEST_NO_EXPLICIT_VECTORIZATION` setting"}}
{"#959": {"supported/other_improved": "[#959](https://gitlab.com/libeigen/eigen/-/merge_requests/959): Improved AVX512 implementation with header file renaming and hardware capability restrictions"}}
{"#960": {"supported/other_improved": "[#960](https://gitlab.com/libeigen/eigen/-/merge_requests/960): Removed AVX512VL dependency in trsm function, improving compatibility across different AVX configurations"}}
{"#962": {"supported/other_improved": "[#962](https://gitlab.com/libeigen/eigen/-/merge_requests/962): Optimized Householder sequence block handling to eliminate unnecessary heap allocations and improve performance"}}
{"#963": {"supported/other_fixed": "[#963](https://gitlab.com/libeigen/eigen/-/merge_requests/963): Fixed NaN propagation for scalar input by adding missing template parameter"}}
{"#964": {"supported/other_fixed": "[#964](https://gitlab.com/libeigen/eigen/-/merge_requests/964): Fix compilation issue in HouseholderSequence.h related to InnerPanel template parameter"}}
{"#965": {"supported/other_added": "[#965](https://gitlab.com/libeigen/eigen/-/merge_requests/965): Added three new fused multiply functions (pmsub, pnmadd, pnmsub) for PowerPC architecture"}}
{"#958": {"supported/other_fixed": "[#958](https://gitlab.com/libeigen/eigen/-/merge_requests/958): Fixed compiler bugs for GCC 10 & 11 in Power GEMM inline assembly"}}
{"#966": {"supported/breaking_changes": "[#966](https://gitlab.com/libeigen/eigen/-/merge_requests/966): Simplified Accelerate LLT and LDLT solvers by removing explicit Symmetric flag requirement"}}
{"#967": {"supported/other_improved": "[#967](https://gitlab.com/libeigen/eigen/-/merge_requests/967): Optimized GEMM MMA with vector_pairs loading and improved predux GEMV performance"}}
{"#968": {"supported/other_improved": "[#968](https://gitlab.com/libeigen/eigen/-/merge_requests/968): Made diagonal matrix `cols()` and `rows()` methods constexpr to improve compile-time evaluation"}}
{"#969": {"supported/other_improved": "[#969](https://gitlab.com/libeigen/eigen/-/merge_requests/969): Conditionally add `uninstall` target to prevent CMake installation conflicts"}}
{"#356": {"supported/major_changes": "[#356](https://gitlab.com/libeigen/eigen/-/merge_requests/356): Introduced PocketFFT as a more performant and accurate replacement for KissFFT in Eigen's FFT module"}}
{"#860": {"supported/major_changes": "[#860](https://gitlab.com/libeigen/eigen/-/merge_requests/860): Adds AVX512 optimizations for matrix multiplication with significant performance improvements for single and double precision kernels"}}
{"#908": {"supported/other_fixed": "[#908](https://gitlab.com/libeigen/eigen/-/merge_requests/908): Corrected reference code for `ata_product` function in STL_interface.hh"}}
{"#974": {"supported/other_fixed": "[#974](https://gitlab.com/libeigen/eigen/-/merge_requests/974): Fixed BDCSVD crash caused by index out of bounds in matrix processing"}}
{"#973": {"unsupported/other_added": "[#973](https://gitlab.com/libeigen/eigen/-/merge_requests/973): Added `.arg()` method to Tensor class for retrieving indices of max/min values along specified dimensions"}}
{"#977": {"supported/other_fixed": "[#977](https://gitlab.com/libeigen/eigen/-/merge_requests/977): Fixed numerical stability issue in BDCSVD algorithm"}}
{"#984": {"supported/other_improved": "[#984](https://gitlab.com/libeigen/eigen/-/merge_requests/984): Removes executable flag from files to improve project file permission management"}}
{"#985": {"supported/other_improved": "[#985](https://gitlab.com/libeigen/eigen/-/merge_requests/985): Improved logical shift operation implementations and fixed typo in SVE/PacketMath.h"}}
{"#983": {"supported/major_changes": "[#983](https://gitlab.com/libeigen/eigen/-/merge_requests/983): Extends SYCL backend's QueueInterface to accept existing SYCL queues for improved framework integration"}}
{"#980": {"supported/other_fixed": "[#980](https://gitlab.com/libeigen/eigen/-/merge_requests/980): Fixed signed integer overflow in adjoint test to improve code safety"}}
{"#975": {"supported/major_changes": "[#975](https://gitlab.com/libeigen/eigen/-/merge_requests/975): Introduced subMappers for Power GEMM packing, improving performance by approximately 10% through simplified address calculations"}}
{"#982": {"unsupported/other_improved": "[#982](https://gitlab.com/libeigen/eigen/-/merge_requests/982): Resolved ambiguities in Tensor comparison operators for C++20 compatibility"}}
{"#986": {"supported/major_changes": "[#986](https://gitlab.com/libeigen/eigen/-/merge_requests/986): SYCL-2020 range handling updated to ensure at least one thread execution by replacing default ranges with ranges of size 1"}}
{"#976": {"supported/other_fixed": "[#976](https://gitlab.com/libeigen/eigen/-/merge_requests/976): Fix LDLT decomposition with AutoDiffScalar when value is 0"}}
{"#971": {"supported/major_changes": "[#971](https://gitlab.com/libeigen/eigen/-/merge_requests/971): Introduces R-Bidiagonalization step to BDCSVD, optimizing SVD performance for tall and wide matrices using QR decomposition"}}
{"#987": {"supported/other_fixed": "[#987](https://gitlab.com/libeigen/eigen/-/merge_requests/987): Fixed integer shortening warnings in visitor tests"}}
{"#972": {"supported/major_changes": "[#972](https://gitlab.com/libeigen/eigen/-/merge_requests/972): AVX512 optimizations for s/dgemm compute kernel, resolving previous architectural and build compatibility issues"}}
{"#981": {"supported/other_added": "[#981](https://gitlab.com/libeigen/eigen/-/merge_requests/981): Added MKL adapter and implementations for KFR and FFTS FFT libraries in Eigen's FFT module"}}
{"#989": {"supported/other_improved": "[#989](https://gitlab.com/libeigen/eigen/-/merge_requests/989): Resolves C++20 comparison operator ambiguity in template comparisons"}}
{"#988": {"supported/other_fixed": "[#988](https://gitlab.com/libeigen/eigen/-/merge_requests/988): Fixed MSVC build issues with AVX512 by temporarily disabling specific optimizations to reduce memory consumption and prevent compilation failures"}}
{"#990": {"supported/major_changes": "[#990](https://gitlab.com/libeigen/eigen/-/merge_requests/990): Adds product operations and static initializers for DiagonalMatrix, improving matrix algebra convenience"}}
{"#991": {"supported/other_fixed": "[#991](https://gitlab.com/libeigen/eigen/-/merge_requests/991): Resolved ambiguous comparison warnings in clang for C++20 by adjusting TensorBase comparison operators"}}
{"#993": {"supported/other_fixed": "[#993](https://gitlab.com/libeigen/eigen/-/merge_requests/993): Corrected row vs column vector terminology typo in Matrix class tutorial documentation"}}
{"#992": {"supported/major_changes": "[#992](https://gitlab.com/libeigen/eigen/-/merge_requests/992): Enhanced AVX512 TRSM kernels to respect EIGEN_NO_MALLOC memory allocation configuration"}}
{"#994": {"supported/other_improved": "[#994](https://gitlab.com/libeigen/eigen/-/merge_requests/994): Marks `index_remap` as `EIGEN_DEVICE_FUNC` to enable GPU expression reshaping"}}
{"#995": {"supported/other_added": "[#995](https://gitlab.com/libeigen/eigen/-/merge_requests/995): Added comprehensive documentation for the DiagonalBase class to improve library usability"}}
{"#996": {"supported/major_changes": "[#996](https://gitlab.com/libeigen/eigen/-/merge_requests/996): Updates SYCL kernel naming to comply with SYCL-2020 specification, improving SYCL compatibility and integration"}}
{"#998": {"supported/other_improved": "[#998](https://gitlab.com/libeigen/eigen/-/merge_requests/998): Improved tanh and erf vectorized implementation for EIGEN_FAST_MATH in VSX architecture"}}
{"#997": {"supported/other_improved": "[#997](https://gitlab.com/libeigen/eigen/-/merge_requests/997): Enhances AVX512 TRSM kernels memory management by using `alloca` when `EIGEN_NO_MALLOC` is requested"}}
{"#999": {"supported/other_improved": "[#999](https://gitlab.com/libeigen/eigen/-/merge_requests/999): Update Householder.h to use numext::sqrt for improved custom type support"}}
{"#1003": {"supported/other_fixed": "[#1003](https://gitlab.com/libeigen/eigen/-/merge_requests/1003): Eliminated undefined warnings for non-AVX512 compilation by adding appropriate macro guards"}}
{"#1001": {"unsupported/other_fixed": "[#1001](https://gitlab.com/libeigen/eigen/-/merge_requests/1001): Fixed build compatibility for f16/bf16 Bessel function specializations on AVX512 for older compilers"}}
{"#1002": {"supported/other_improved": "[#1002](https://gitlab.com/libeigen/eigen/-/merge_requests/1002): Addressed clang-tidy warnings by reformatting function definitions in headers and improving code clarity"}}
{"#1000": {"supported/other_improved": "[#1000](https://gitlab.com/libeigen/eigen/-/merge_requests/1000): Performance optimization for GEMV on Power10 architecture using more load and store vector pairs"}}
{"#947": {"supported/other_improved": "[#947](https://gitlab.com/libeigen/eigen/-/merge_requests/947): Added partial loading, storing, gathering, and scattering packet operations to improve memory access efficiency and performance"}}
{"#1005": {"unsupported/other_improved": "[#1005](https://gitlab.com/libeigen/eigen/-/merge_requests/1005): Re-enabled unit tests for device side malloc in ROCm 5.2"}}
{"#1007": {"supported/other_fixed": "[#1007](https://gitlab.com/libeigen/eigen/-/merge_requests/1007): Fixed One Definition Rule (ODR) violations by converting unnamed type declarations to named types"}}
{"#1006": {"supported/other_improved": "[#1006](https://gitlab.com/libeigen/eigen/-/merge_requests/1006): Improved AutoDiff module header management by including necessary Core dependencies"}}
{"#1009": {"supported/other_improved": "[#1009](https://gitlab.com/libeigen/eigen/-/merge_requests/1009): Corrected Doxygen group usage to improve documentation clarity and structure"}}
{"#1013": {"supported/other_improved": "[#1013](https://gitlab.com/libeigen/eigen/-/merge_requests/1013): Added compiler flag to enable/disable AVX512 GEBP kernels, improving configuration flexibility"}}
{"#1014": {"supported/other_fixed": "[#1014](https://gitlab.com/libeigen/eigen/-/merge_requests/1014): Fixed `aligned_realloc` to correctly check memory allocation constraints when pointer is null"}}
{"#1015": {"supported/breaking_changes": "[#1015](https://gitlab.com/libeigen/eigen/-/merge_requests/1015): Disabled AVX512 GEMM kernels by default due to segmentation fault issues"}}
{"#1016": {"supported/other_improved": "[#1016](https://gitlab.com/libeigen/eigen/-/merge_requests/1016): Resolved Emscripten header inclusion issue with `immintrin.h`"}}
{"#978": {"supported/major_changes": "[#978](https://gitlab.com/libeigen/eigen/-/merge_requests/978): Added efficient sparse subset of matrix inverse computation using Takahashi algorithm with improved numerical stability"}}
{"#1021": {"supported/other_improved": "[#1021](https://gitlab.com/libeigen/eigen/-/merge_requests/1021): Updated AccelerateSupport documentation for improved clarity and accuracy"}}
{"#1019": {"supported/other_fixed": "[#1019](https://gitlab.com/libeigen/eigen/-/merge_requests/1019): Prevent `<sstream>` inclusion when `EIGEN_NO_IO` is defined, improving embedded system compatibility"}}
{"#1004": {"supported/other_added": "[#1004](https://gitlab.com/libeigen/eigen/-/merge_requests/1004): Adds `determinant()` method for various QR decomposition classes including HouseholderQR, ColPivHouseholderQR, FullPivHouseholderQR, and CompleteOrthogonalDecomposition"}}
{"#1011": {"supported/other_improved": "[#1011](https://gitlab.com/libeigen/eigen/-/merge_requests/1011): Optimized pblend AVX implementation, reducing execution time by 24.84%"}}
{"#1020": {"supported/other_improved": "[#1020](https://gitlab.com/libeigen/eigen/-/merge_requests/1020): Modify ConjugateGradient to use numext::sqrt for improved type compatibility"}}
{"#1023": {"supported/other_fixed": "[#1023](https://gitlab.com/libeigen/eigen/-/merge_requests/1023): Fixed flaky packetmath_1 test by adjusting inputs to prevent value cancellations"}}
{"#1010": {"supported/other_fixed": "[#1010](https://gitlab.com/libeigen/eigen/-/merge_requests/1010): Fixed inner iterator for sparse block to correctly handle outer index and improve sparse matrix operations"}}
{"#1024": {"supported/major_changes": "[#1024](https://gitlab.com/libeigen/eigen/-/merge_requests/1024): Partial Packet support for GEMM real-only operations on PowerPC, with compilation warning fixes and performance improvements"}}
{"#1025": {"supported/other_fixed": "[#1025](https://gitlab.com/libeigen/eigen/-/merge_requests/1025): Fixed Packet2d type implementation for non-VSX platforms to improve portability"}}
{"#1028": {"supported/other_fixed": "[#1028](https://gitlab.com/libeigen/eigen/-/merge_requests/1028): Fixed build compatibility for non-VSX PowerPC architectures"}}
{"#1027": {"supported/other_fixed": "[#1027](https://gitlab.com/libeigen/eigen/-/merge_requests/1027): Fixed vectorized pow() function to handle edge cases with negative zero and negative infinity correctly"}}
{"#1012": {"supported/other_fixed": "[#1012](https://gitlab.com/libeigen/eigen/-/merge_requests/1012): Fixed vectorized Jacobi Rotation implementation by correcting logic for applying vectorized operations"}}
{"#1026": {"supported/other_improved": "[#1026](https://gitlab.com/libeigen/eigen/-/merge_requests/1026): Vectorized sign operator for real types to enhance computational performance across different CPU architectures"}}
{"#1030": {"supported/other_fixed": "[#1030](https://gitlab.com/libeigen/eigen/-/merge_requests/1030): Resolves Half function definition conflict on aarch64 for GPU compilation"}}
{"#1031": {"supported/other_improved": "[#1031](https://gitlab.com/libeigen/eigen/-/merge_requests/1031): Eliminated bool bitwise warnings by refactoring code to use logical operations instead of bitwise operations"}}
{"#1032": {"supported/other_fixed": "[#1032](https://gitlab.com/libeigen/eigen/-/merge_requests/1032): Fixed invalid deprecation warnings in BDCSVD constructor handling"}}
{"#1033": {"supported/other_fixed": "[#1033](https://gitlab.com/libeigen/eigen/-/merge_requests/1033): Fixed SYCL tests by correcting sigmoid function, binary logic operators, and resolving test failures in tensor math operations"}}
{"#1035": {"supported/other_improved": "[#1035](https://gitlab.com/libeigen/eigen/-/merge_requests/1035): Removed redundant FP16C checks for AVX512 intrinsics, improving performance for float-to-half and half-to-float conversions"}}
{"#1029": {"supported/other_added": "[#1029](https://gitlab.com/libeigen/eigen/-/merge_requests/1029): Added fixed power unary operation for coefficientwise real-valued power operations on arrays"}}
{"#1017": {"supported/major_changes": "[#1017](https://gitlab.com/libeigen/eigen/-/merge_requests/1017): Add support for AVX512-FP16 instruction set, introducing `Packet32h` and optimizing half-precision floating-point operations with up to 8-9x performance improvement"}}
{"#1034": {"supported/major_changes": "[#1034](https://gitlab.com/libeigen/eigen/-/merge_requests/1034): Improved pow<double> performance with more efficient division algorithm, achieving 11-15% speedup"}}
{"#1037": {"supported/other_fixed": "[#1037](https://gitlab.com/libeigen/eigen/-/merge_requests/1037): Protected new pblend implementation with EIGEN_VECTORIZE_AVX2 to address build compatibility issues"}}
{"#1039": {"supported/other_fixed": "[#1039](https://gitlab.com/libeigen/eigen/-/merge_requests/1039): Fixed `psign` function for unsigned integer types, preventing incorrect behavior with bool types"}}
{"#1036": {"supported/major_changes": "[#1036](https://gitlab.com/libeigen/eigen/-/merge_requests/1036): Replaced malloc/free with conditional_aligned memory allocation in sparse classes to improve memory management and potential performance"}}
{"#1044": {"supported/other_fixed": "[#1044](https://gitlab.com/libeigen/eigen/-/merge_requests/1044): Fixed memory allocation issue by adding missing pointer in realloc call"}}
{"#1045": {"supported/other_fixed": "[#1045](https://gitlab.com/libeigen/eigen/-/merge_requests/1045): Fixed GeneralizedEigenSolver::info() method to improve initialization checks and error messaging"}}
{"#1042": {"supported/other_fixed": "[#1042](https://gitlab.com/libeigen/eigen/-/merge_requests/1042): Fixed undefined behavior in array_cwise test related to signed integer overflow"}}
{"#1040": {"supported/other_improved": "[#1040](https://gitlab.com/libeigen/eigen/-/merge_requests/1040): Specialized `psign<Packet8i>` for AVX2 with up to 79.45% performance improvement and removed vectorization of `psign<bool>`"}}
{"#1046": {"supported/other_added": "[#1046](https://gitlab.com/libeigen/eigen/-/merge_requests/1046): Re-enabled pow function for complex number types, expanding mathematical computation capabilities"}}
{"#1043": {"supported/other_improved": "[#1043](https://gitlab.com/libeigen/eigen/-/merge_requests/1043): Vectorized implementation of pow for integer base and exponent types, improving performance and numerical robustness"}}
{"#1038": {"supported/major_changes": "[#1038](https://gitlab.com/libeigen/eigen/-/merge_requests/1038): Vectorized implementations of `acos`, `asin`, and `atan` for float with significant performance improvements"}}
{"#1048": {"supported/other_fixed": "[#1048](https://gitlab.com/libeigen/eigen/-/merge_requests/1048): Fixed test build errors in unary power operations with improved type handling for real and complex numbers"}}
{"#1049": {"supported/other_fixed": "[#1049](https://gitlab.com/libeigen/eigen/-/merge_requests/1049): Fixed typos in documentation table for slicing tutorial"}}
{"#1051": {"supported/other_fixed": "[#1051](https://gitlab.com/libeigen/eigen/-/merge_requests/1051): Fixed mixingtypes tests related to unary power operation"}}
{"#1052": {"supported/other_improved": "[#1052](https://gitlab.com/libeigen/eigen/-/merge_requests/1052): Improved CMake configuration by disabling default benchmark builds and fixing test dependencies with sparse libraries"}}
{"#1050": {"supported/other_improved": "[#1050](https://gitlab.com/libeigen/eigen/-/merge_requests/1050): Added index-out-of-bounds assertions in IndexedView to improve error detection and library safety"}}
{"#1053": {"supported/other_fixed": "[#1053](https://gitlab.com/libeigen/eigen/-/merge_requests/1053): Fixed MSVC compilation error in GeneralizedEigenSolver.h by adding a missing semi-colon"}}
{"#1054": {"supported/other_improved": "[#1054](https://gitlab.com/libeigen/eigen/-/merge_requests/1054): Fixed documentation typo in TutorialSparse.dox"}}
{"#1055": {"supported/other_fixed": "[#1055](https://gitlab.com/libeigen/eigen/-/merge_requests/1055): Added safeguard in `aligned_realloc()` to prevent memory reallocation when `EIGEN_RUNTIME_NO_MALLOC` is defined"}}
{"#1056": {"supported/other_improved": "[#1056](https://gitlab.com/libeigen/eigen/-/merge_requests/1056): Reduced compiler warnings in test code to improve build output and code quality"}}
{"#1057": {"supported/other_fixed": "[#1057](https://gitlab.com/libeigen/eigen/-/merge_requests/1057): Adjusted overflow threshold bounds in power function tests to prevent integer and floating-point overflow scenarios"}}
{"#899": {"supported/major_changes": "[#899](https://gitlab.com/libeigen/eigen/-/merge_requests/899): Adds C++14 constexpr support for Map initialization and basic operations with compile-time computation capabilities"}}
{"#1058": {"supported/other_improved": "[#1058](https://gitlab.com/libeigen/eigen/-/merge_requests/1058): Added missing comparison operators for GPU packets, resolving CUDA build issues and improving GPU computation support"}}
{"#1061": {"supported/other_fixed": "[#1061](https://gitlab.com/libeigen/eigen/-/merge_requests/1061): Fixed bound for pow function to handle floating-point type limitations"}}
{"#1060": {"supported/other_fixed": "[#1060](https://gitlab.com/libeigen/eigen/-/merge_requests/1060): Fixed memory reallocation for non-trivial types to handle self-referencing pointers and improve stability"}}
{"#1047": {"supported/other_added": "[#1047](https://gitlab.com/libeigen/eigen/-/merge_requests/1047): Added skew symmetric matrix class for 3D vectors to enhance vector transformations"}}
{"#1064": {"supported/other_improved": "[#1064](https://gitlab.com/libeigen/eigen/-/merge_requests/1064): Improved constexpr compatibility for g++-6 and C++20, addressing build errors and compiler-specific constraints"}}
{"#1065": {"supported/other_fixed": "[#1065](https://gitlab.com/libeigen/eigen/-/merge_requests/1065): Fixes sparse matrix compilation issues on ROCm backend"}}
{"#1063": {"supported/other_fixed": "[#1063](https://gitlab.com/libeigen/eigen/-/merge_requests/1063): Fixed type safety and comparison issues in unary pow() function"}}
{"#1069": {"supported/other_fixed": "[#1069](https://gitlab.com/libeigen/eigen/-/merge_requests/1069): Removed faulty skew_symmetric_matrix3 test with uninitialized matrix comparison errors"}}
{"#1066": {"supported/other_improved": "[#1066](https://gitlab.com/libeigen/eigen/-/merge_requests/1066): Improved `pow()` function to allow mixed types with safe type promotions"}}
{"#1070": {"supported/other_fixed": "[#1070](https://gitlab.com/libeigen/eigen/-/merge_requests/1070): Fixed test for pow function handling of mixed integer types"}}
{"#1073": {"supported/major_changes": "[#1073](https://gitlab.com/libeigen/eigen/-/merge_requests/1073): Adds AVX vectorized implementation for int32_t division with improved performance"}}
{"#1074": {"supported/major_changes": "[#1074](https://gitlab.com/libeigen/eigen/-/merge_requests/1074): Reverted previous `constexpr` implementation and tests"}}
{"#1077": {"supported/other_fixed": "[#1077](https://gitlab.com/libeigen/eigen/-/merge_requests/1077): Fixed unused-result warning for ROCm gpuGetDevice function with better error reporting"}}
{"#1076": {"supported/major_changes": "[#1076](https://gitlab.com/libeigen/eigen/-/merge_requests/1076): Adds vectorized integer division for int32 using AVX512, AVX, and SSE instructions with performance optimizations"}}
{"#1018": {"supported/major_changes": "[#1018](https://gitlab.com/libeigen/eigen/-/merge_requests/1018): Optimize gebp_kernel for arm64-neon with 3px8/2px8/1px8 configuration to improve matrix multiplication performance"}}
{"#1078": {"supported/other_improved": "[#1078](https://gitlab.com/libeigen/eigen/-/merge_requests/1078): Added macro to configure `nr` trait in GEBP kernel for NEON architecture, potentially improving matrix computation performance"}}
{"#1080": {"supported/other_removed": "[#1080](https://gitlab.com/libeigen/eigen/-/merge_requests/1080): Removed an unused typedef to improve code clarity and maintainability"}}
{"#1079": {"supported/other_improved": "[#1079](https://gitlab.com/libeigen/eigen/-/merge_requests/1079): Optimize GEBP kernel compilation time and memory usage with EIGEN_IF_CONSTEXPR"}}
{"#1083": {"supported/other_improved": "[#1083](https://gitlab.com/libeigen/eigen/-/merge_requests/1083): Reduced memory footprint of GEBP kernel for non-ARM targets to mitigate MSVC heap memory issues"}}
{"#1082": {"supported/major_changes": "[#1082](https://gitlab.com/libeigen/eigen/-/merge_requests/1082): Adds vectorized implementation of atan2 with array syntax, providing significant performance improvements for mathematical computations"}}
{"#1084": {"supported/other_improved": "[#1084](https://gitlab.com/libeigen/eigen/-/merge_requests/1084): Vectorized implementation of atan() for double precision, improving computational efficiency"}}
{"#1086": {"supported/other_improved": "[#1086](https://gitlab.com/libeigen/eigen/-/merge_requests/1086): Conditional vectorization of `atan<double>` for Altivec with VSX support"}}
{"#1085": {"supported/other_fixed": "[#1085](https://gitlab.com/libeigen/eigen/-/merge_requests/1085): Fixed 4x4 matrix inverse computation when compiling with -Ofast optimization flag"}}
{"#1088": {"supported/other_improved": "[#1088](https://gitlab.com/libeigen/eigen/-/merge_requests/1088): Replaced standard `assert` with `eigen_assert` for improved consistency and assertion control"}}
{"#1089": {"supported/major_changes": "[#1089](https://gitlab.com/libeigen/eigen/-/merge_requests/1089): Unconditionally enables CXX11 math features for all compilers supporting C++14 and later"}}
{"#1087": {"supported/other_improved": "[#1087](https://gitlab.com/libeigen/eigen/-/merge_requests/1087): Simplified range reduction strategy for `atan<float>()` with 20-40% speedup on x86 architectures"}}
{"#1091": {"supported/other_improved": "[#1091](https://gitlab.com/libeigen/eigen/-/merge_requests/1091): Added macros to AttributeMacros to improve clang-format compatibility and code formatting"}}
{"#1092": {"supported/other_removed": "[#1092](https://gitlab.com/libeigen/eigen/-/merge_requests/1092): Removed references to M_PI_2 and M_PI_4 constants from Eigen codebase"}}
{"#1093": {"supported/other_improved": "[#1093](https://gitlab.com/libeigen/eigen/-/merge_requests/1093): Improved handling of NaN inputs in atan2 function to enhance mathematical computation reliability"}}
{"#1094": {"supported/other_fixed": "[#1094](https://gitlab.com/libeigen/eigen/-/merge_requests/1094): Fixed unused variable warnings in Eigen/Sparse module with clang 16.0.0git"}}
{"#1075": {"supported/other_improved": "[#1075](https://gitlab.com/libeigen/eigen/-/merge_requests/1075): Optimized sign function for complex numbers by conditionally using generic vectorization"}}
{"#1095": {"supported/other_improved": "[#1095](https://gitlab.com/libeigen/eigen/-/merge_requests/1095): Refactored special values tests for pow and added new test for atan2, improving mathematical function testing"}}
{"#1096": {"supported/other_fixed": "[#1096](https://gitlab.com/libeigen/eigen/-/merge_requests/1096): Fixed a bug in the `atan2` function related to `pselect` behavior with single-bit packets"}}
{"#1099": {"supported/other_improved": "[#1099](https://gitlab.com/libeigen/eigen/-/merge_requests/1099): Clarified documentation requirement that indices must be sorted to improve library usability"}}
{"#1101": {"supported/other_improved": "[#1101](https://gitlab.com/libeigen/eigen/-/merge_requests/1101): Improved memory management by using 1-byte offset for address alignment in handmade allocation functions"}}
{"#1105": {"supported/other_fixed": "[#1105](https://gitlab.com/libeigen/eigen/-/merge_requests/1105): Fixed pragma check for disabling fastmath optimization"}}
{"#1102": {"supported/other_improved": "[#1102](https://gitlab.com/libeigen/eigen/-/merge_requests/1102): Add assertion to validate outer index array size in SparseMapBase, improving input validation and preventing potential runtime errors"}}
{"#1106": {"supported/other_fixed": "[#1106](https://gitlab.com/libeigen/eigen/-/merge_requests/1106): Fixed handmade_aligned_malloc offset computation to prevent potential out-of-bounds memory writes and compiler warnings"}}
{"#1107": {"supported/other_fixed": "[#1107](https://gitlab.com/libeigen/eigen/-/merge_requests/1107): Disable patan for double precision on PowerPC to prevent build failures"}}
{"#1100": {"supported/other_improved": "[#1100](https://gitlab.com/libeigen/eigen/-/merge_requests/1100): Enhanced resizing capabilities for dynamic empty matrices, improving matrix dimension handling and flexibility"}}
{"#1110": {"supported/other_improved": "[#1110](https://gitlab.com/libeigen/eigen/-/merge_requests/1110): Removed unused parameter name to improve code readability"}}
{"#1109": {"supported/other_improved": "[#1109](https://gitlab.com/libeigen/eigen/-/merge_requests/1109): Removed unnecessary assert in SparseMapBase to improve flexibility in sparse matrix initialization"}}
{"#1097": {"supported/other_added": "[#1097](https://gitlab.com/libeigen/eigen/-/merge_requests/1097): Adds a new `signbit` function for efficient floating-point sign checking with AVX2 packet operation support"}}
{"#1111": {"supported/other_improved": "[#1111](https://gitlab.com/libeigen/eigen/-/merge_requests/1111): Fixed Neon vectorization issues to improve ARM architecture performance and compatibility"}}
{"#1112": {"supported/other_fixed": "[#1112](https://gitlab.com/libeigen/eigen/-/merge_requests/1112): Corrected a typo in the CholmodSupport module"}}
{"#1118": {"supported/other_fixed": "[#1118](https://gitlab.com/libeigen/eigen/-/merge_requests/1118): Fixed ambiguity in PowerPC vec_splats call for uint64_t type compatibility"}}
{"#1119": {"unsupported/other_improved": "[#1119](https://gitlab.com/libeigen/eigen/-/merge_requests/1119): Added brackets around unsigned type names to improve code readability and consistency"}}
{"#1116": {"supported/other_fixed": "[#1116](https://gitlab.com/libeigen/eigen/-/merge_requests/1116): Corrected pnegate function to accurately handle floating-point zero by directly flipping the sign bit"}}
{"#1098": {"supported/other_added": "[#1098](https://gitlab.com/libeigen/eigen/-/merge_requests/1098): Implemented cross product for 2D vectors, computing a scalar representing the signed area of the spanned parallelogram"}}
{"#1113": {"supported/other_fixed": "[#1113](https://gitlab.com/libeigen/eigen/-/merge_requests/1113): Fixed duplicate execution code for Power 8 Altivec in pstore_partial function"}}
{"#1115": {"supported/other_fixed": "[#1115](https://gitlab.com/libeigen/eigen/-/merge_requests/1115): Fixed AVX2 psignbit implementation to resolve accuracy and reliability issues"}}
{"#1117": {"supported/other_improved": "[#1117](https://gitlab.com/libeigen/eigen/-/merge_requests/1117): Small cleanup of IDRS.h, removing unused variable and improving comment formatting"}}
{"#1120": {"supported/other_fixed": "[#1120](https://gitlab.com/libeigen/eigen/-/merge_requests/1120): Fixed critical bugs in `handmade_aligned_realloc` to prevent memory management issues and potential undefined behavior"}}
{"#1121": {"supported/other_added": "[#1121](https://gitlab.com/libeigen/eigen/-/merge_requests/1121): Adds serialization capabilities for sparse matrices and sparse vectors"}}
{"#1122": {"supported/other_improved": "[#1122](https://gitlab.com/libeigen/eigen/-/merge_requests/1122): Reduced compiler warnings in test files by addressing narrowing conversions and improving code quality"}}
{"#1125": {"unsupported/major_changes": "[#1125](https://gitlab.com/libeigen/eigen/-/merge_requests/1125): Adds synchronize method to all device types, improving device operation consistency and flexibility"}}
{"#1124": {"supported/other_fixed": "[#1124](https://gitlab.com/libeigen/eigen/-/merge_requests/1124): Fixed sparseLU solver to handle destinations with non-unit stride"}}
{"#1114": {"supported/other_improved": "[#1114](https://gitlab.com/libeigen/eigen/-/merge_requests/1114): Enhanced BiCGSTAB parameter initialization to support custom types"}}
{"#1123": {"unsupported/other_fixed": "[#1123](https://gitlab.com/libeigen/eigen/-/merge_requests/1123): Fix reshaping strides handling for inputs with non-zero inner stride in Eigen's Tensor module"}}
{"#1127": {"supported/other_fixed": "[#1127](https://gitlab.com/libeigen/eigen/-/merge_requests/1127): Fixed serialization process for non-compressed matrices by correcting data buffer size calculation"}}
{"#1008": {"supported/major_changes": "[#1008](https://gitlab.com/libeigen/eigen/-/merge_requests/1008): Add Power10 (AltiVec) MMA instructions support for bfloat16 computations with enhanced performance"}}
{"#1104": {"supported/other_fixed": "[#1104](https://gitlab.com/libeigen/eigen/-/merge_requests/1104): Fix NEON instruction fmla bug for half data type, preventing compiler errors and performance issues"}}
{"#1103": {"supported/major_changes": "[#1103](https://gitlab.com/libeigen/eigen/-/merge_requests/1103): Added new utility for sorting inner vectors of sparse matrices and vectors with custom comparison function"}}
{"#1130": {"supported/other_fixed": "[#1130](https://gitlab.com/libeigen/eigen/-/merge_requests/1130): Fixed index type typo in sparse index sorting implementation"}}
{"#1131": {"supported/other_improved": "[#1131](https://gitlab.com/libeigen/eigen/-/merge_requests/1131): Increased L2 and L3 cache sizes for Power10 architecture to improve matrix operation performance by 1.33X"}}
{"#1128": {"supported/other_improved": "[#1128](https://gitlab.com/libeigen/eigen/-/merge_requests/1128): Enables direct access for NestByValue construct, improving performance and usability"}}
{"#1129": {"supported/other_improved": "[#1129](https://gitlab.com/libeigen/eigen/-/merge_requests/1129): Added BDCSVD LAPACKE binding for more flexible and efficient SVD computations"}}
{"#1133": {"supported/other_added": "[#1133](https://gitlab.com/libeigen/eigen/-/merge_requests/1133): Introduces new `setEqualSpaced` function for creating equally spaced vectors with vectorized implementation"}}
{"#1134": {"supported/other_improved": "[#1134](https://gitlab.com/libeigen/eigen/-/merge_requests/1134): Optimized `equalspace` packet operation to improve performance and computational efficiency"}}
{"#1090": {"supported/major_changes": "[#1090](https://gitlab.com/libeigen/eigen/-/merge_requests/1090): Adds constexpr support for std::initializer_list constructors in Eigen matrices and arrays, enabling compile-time initialization in C++20 and partially in C++14/17"}}
{"#1135": {"supported/other_improved": "[#1135](https://gitlab.com/libeigen/eigen/-/merge_requests/1135): Improved divide by zero error handling for better cross-platform compatibility"}}
{"#1137": {"supported/other_improved": "[#1137](https://gitlab.com/libeigen/eigen/-/merge_requests/1137): Improved bfloat16 support by replacing std::signbit with numext::signbit"}}
{"#1138": {"supported/other_improved": "[#1138](https://gitlab.com/libeigen/eigen/-/merge_requests/1138): Improved test coverage for numext::signbit function"}}
{"#1139": {"supported/other_improved": "[#1139](https://gitlab.com/libeigen/eigen/-/merge_requests/1139): Adds comparison, `+=`, and `-=` operators to `CompressedStorageIterator` to improve iterator functionality"}}
{"#1141": {"supported/other_improved": "[#1141](https://gitlab.com/libeigen/eigen/-/merge_requests/1141): Enables NEON absolute value operations for unsigned integer types, improving performance for `.cwiseAbs()` operations"}}
{"#1143": {"supported/other_fixed": "[#1143](https://gitlab.com/libeigen/eigen/-/merge_requests/1143): Reverted type mixing restrictions in CompressedStorage.h to restore previous functionality"}}
{"#1142": {"supported/other_fixed": "[#1142](https://gitlab.com/libeigen/eigen/-/merge_requests/1142): Fixed incorrect NEON native fp16 multiplication kernel for ARM hardware"}}
{"#1144": {"supported/other_improved": "[#1144](https://gitlab.com/libeigen/eigen/-/merge_requests/1144): Improved C++ version detection macros and CMake tests to enhance compatibility and reduce CI failures"}}
{"#1146": {"supported/other_improved": "[#1146](https://gitlab.com/libeigen/eigen/-/merge_requests/1146): Enabled additional NEON instructions including complex psqrt and plset operations"}}
{"#1145": {"supported/other_improved": "[#1145](https://gitlab.com/libeigen/eigen/-/merge_requests/1145): Improved bfloat16 product test thresholds to enhance comparison reliability"}}
{"#1140": {"supported/other_improved": "[#1140](https://gitlab.com/libeigen/eigen/-/merge_requests/1140): Improved SparseLU implementation by updating dense GEMM kernel and fixing initialization bug in SparseLUTransposeView"}}
{"#1149": {"supported/other_fixed": "[#1149](https://gitlab.com/libeigen/eigen/-/merge_requests/1149): Fixed `.gitignore` issue preventing `scripts/buildtests.in` from being added with `git add .`"}}
{"#1151": {"supported/other_fixed": "[#1151](https://gitlab.com/libeigen/eigen/-/merge_requests/1151): Fixed EIGEN_HAS_CXX17_OVERALIGN configuration for Intel C++ Compiler (icc)"}}
{"#1155": {"supported/other_fixed": "[#1155](https://gitlab.com/libeigen/eigen/-/merge_requests/1155): Fixes overalign check preprocessor directive handling for improved compiler compatibility"}}
{"#1156": {"supported/other_fixed": "[#1156](https://gitlab.com/libeigen/eigen/-/merge_requests/1156): Fixed minor build and test issues including header paths, vectorization, GPU support, and removing unnecessary headers"}}
{"#1153": {"supported/other_fixed": "[#1153](https://gitlab.com/libeigen/eigen/-/merge_requests/1153): Fix macro guards for emulated FP16 operators on GPU, improving compatibility and reducing compilation errors"}}
{"#1154": {"supported/other_improved": "[#1154](https://gitlab.com/libeigen/eigen/-/merge_requests/1154): Significantly improved Power10 MMA bfloat16 GEMM performance with up to 61X speedup"}}
{"#1158": {"supported/other_improved": "[#1158](https://gitlab.com/libeigen/eigen/-/merge_requests/1158): Clarified help message for spbenchsolver to improve matrix file naming instructions"}}
{"#1147": {"supported/major_changes": "[#1147](https://gitlab.com/libeigen/eigen/-/merge_requests/1147): Comprehensive overhaul of SparseMatrix core functionality, improving performance, efficiency, and maintainability of sparse matrix operations"}}
{"#1159": {"unsupported/other_fixed": "[#1159](https://gitlab.com/libeigen/eigen/-/merge_requests/1159): Re-added missing header to restore GPU test functionality"}}
{"#1161": {"supported/other_fixed": "[#1161](https://gitlab.com/libeigen/eigen/-/merge_requests/1161): Fixes unused parameter warning on 32-bit ARM with Clang compiler"}}
{"#1160": {"supported/major_changes": "[#1160](https://gitlab.com/libeigen/eigen/-/merge_requests/1160): Improved insert strategy for compressed sparse matrices with enhanced performance and capacity management"}}
{"#1152": {"supported/major_changes": "[#1152](https://gitlab.com/libeigen/eigen/-/merge_requests/1152): Adds template for QR permutation index type and improves ColPivHouseholderQR LAPACKE bindings"}}
{"#1150": {"supported/other_fixed": "[#1150](https://gitlab.com/libeigen/eigen/-/merge_requests/1150): Fixes Altivec detection and VSX instruction handling for macOS PowerPC systems"}}
{"#1162": {"supported/other_fixed": "[#1162](https://gitlab.com/libeigen/eigen/-/merge_requests/1162): Rolled back previous QR commit to resolve build error with `StorageIndex` definitions"}}
{"#1167": {"supported/other_improved": "[#1167](https://gitlab.com/libeigen/eigen/-/merge_requests/1167): Improved `ColPivHouseholderQR` move assignment to enhance compiler compatibility"}}
{"#1165": {"supported/other_improved": "[#1165](https://gitlab.com/libeigen/eigen/-/merge_requests/1165): Added missing `EIGEN_DEVICE_FUNC` in assertions, improved code compatibility and clarity"}}
{"#1164": {"supported/major_changes": "[#1164](https://gitlab.com/libeigen/eigen/-/merge_requests/1164): Improved sparse matrix permutation performance by reducing memory allocations and optimizing data handling strategies"}}
{"#1168": {"supported/major_changes": "[#1168](https://gitlab.com/libeigen/eigen/-/merge_requests/1168): Adds thread-local storage for `is_malloc_allowed()` state to improve multi-threaded safety"}}
{"#1126": {"supported/major_changes": "[#1126](https://gitlab.com/libeigen/eigen/-/merge_requests/1126): Added Intel DPCPP compiler support for SYCL backend with SYCL-2020 compatibility"}}
{"#1136": {"supported/other_improved": "[#1136](https://gitlab.com/libeigen/eigen/-/merge_requests/1136): Reviewed and cleaned up compiler version checks to improve maintainability and compatibility"}}
{"#1169": {"supported/other_improved": "[#1169](https://gitlab.com/libeigen/eigen/-/merge_requests/1169): Replaced deprecated CMake generator expression `$<CONFIGURATION>` with `$<CONFIG>` to improve build system compatibility"}}
{"#1166": {"supported/major_changes": "[#1166](https://gitlab.com/libeigen/eigen/-/merge_requests/1166): Introduces custom ODR-safe assertion mechanism for improved C++20 module compatibility"}}
{"#1170": {"supported/major_changes": "[#1170](https://gitlab.com/libeigen/eigen/-/merge_requests/1170): Significant performance improvements for sparse matrix insertion, reducing insertion times by orders of magnitude and optimizing memory management"}}
{"#1172": {"supported/other_improved": "[#1172](https://gitlab.com/libeigen/eigen/-/merge_requests/1172): Refactored SparseMatrix.h to improve code consistency and readability by directly referencing class members"}}
{"#1173": {"supported/other_fixed": "[#1173](https://gitlab.com/libeigen/eigen/-/merge_requests/1173): Reverted QR test changes to restore original functionality and compatibility"}}
{"#1174": {"supported/other_improved": "[#1174](https://gitlab.com/libeigen/eigen/-/merge_requests/1174): Performance optimization for bfloat16 matrix-matrix multiplication in non-standard matrix dimensions"}}
{"#1175": {"supported/other_improved": "[#1175](https://gitlab.com/libeigen/eigen/-/merge_requests/1175): Improved `atan2` implementation with better corner case handling and performance optimization"}}
{"#1179": {"supported/other_fixed": "[#1179](https://gitlab.com/libeigen/eigen/-/merge_requests/1179): Fixed consistency issue in reciprocal square root (rsqrt) vectorized implementation"}}
{"#1181": {"supported/other_fixed": "[#1181](https://gitlab.com/libeigen/eigen/-/merge_requests/1181): Fixed bugs in GPU convolution operations by enabling GPU assertions"}}
{"#1178": {"supported/other_fixed": "[#1178](https://gitlab.com/libeigen/eigen/-/merge_requests/1178): Resolved compiler warnings related to sparse matrix operations"}}
{"#1176": {"supported/other_improved": "[#1176](https://gitlab.com/libeigen/eigen/-/merge_requests/1176): Optimized mathematical packet operations including `atan`, `atan2`, `acos`, and binary/unary power computations"}}
{"#1180": {"supported/other_fixed": "[#1180](https://gitlab.com/libeigen/eigen/-/merge_requests/1180): Fixed critical sparse matrix handling bugs for empty matrices to prevent segmentation faults"}}
{"#1184": {"supported/other_fixed": "[#1184](https://gitlab.com/libeigen/eigen/-/merge_requests/1184): Fixes pre-POWER8_VECTOR bugs in pcmp_lt and pnegate, and reactivates psqrt function"}}
{"#1183": {"supported/other_fixed": "[#1183](https://gitlab.com/libeigen/eigen/-/merge_requests/1183): Fixes undefined behavior in Block access to prevent pointer arithmetic on null pointers"}}
{"#1185": {"supported/other_fixed": "[#1185](https://gitlab.com/libeigen/eigen/-/merge_requests/1185): Improved special case handling in atan2 function to resolve test failure in TensorFlow with Clang"}}
{"#1186": {"supported/other_improved": "[#1186](https://gitlab.com/libeigen/eigen/-/merge_requests/1186): Update to ForwardDeclarations.h for improved header organization and maintainability"}}
{"#1188": {"supported/other_fixed": "[#1188](https://gitlab.com/libeigen/eigen/-/merge_requests/1188): Reverted StlIterators edit to address potential undefined behavior"}}
{"#1190": {"supported/other_improved": "[#1190](https://gitlab.com/libeigen/eigen/-/merge_requests/1190): Standardized zero comparisons using VERIFY_IS_EQUAL macro for improved code consistency and reliability"}}
{"#1191": {"supported/other_improved": "[#1191](https://gitlab.com/libeigen/eigen/-/merge_requests/1191): Improved LAPACKE configuration with better complex type handling and LAPACK library compatibility"}}
{"#1192": {"supported/other_improved": "[#1192](https://gitlab.com/libeigen/eigen/-/merge_requests/1192): Improved EIGEN_DEVICE_FUNC compatibility across CUDA 10/11/12 versions and cleaned up warnings"}}
{"#1189": {"supported/other_fixed": "[#1189](https://gitlab.com/libeigen/eigen/-/merge_requests/1189): Added EIGEN_DEVICE_FUNC qualifiers to SkewSymmetricDense to fix CUDA compatibility"}}
{"#1198": {"supported/other_improved": "[#1198](https://gitlab.com/libeigen/eigen/-/merge_requests/1198): Replaced eigen_asserts with eigen_internal_asserts in Power module to reduce unnecessary error checking in release builds"}}
{"#1197": {"supported/major_changes": "[#1197](https://gitlab.com/libeigen/eigen/-/merge_requests/1197): Removed all LGPL licensed code and references to simplify licensing and improve compatibility with MPL2"}}
{"#1200": {"supported/other_removed": "[#1200](https://gitlab.com/libeigen/eigen/-/merge_requests/1200): Remove custom implementations of `equal_to` and `not_equal_no` no longer needed in C++14"}}
{"#1199": {"supported/other_improved": "[#1199](https://gitlab.com/libeigen/eigen/-/merge_requests/1199): Added IWYU export pragmas to top-level headers to improve tooling compatibility and code maintainability"}}
{"#1202": {"supported/other_fixed": "[#1202](https://gitlab.com/libeigen/eigen/-/merge_requests/1202): Fixed MSVC ARM build compatibility by resolving intrinsic function and vector type handling issues"}}
{"#1206": {"supported/other_improved": "[#1206](https://gitlab.com/libeigen/eigen/-/merge_requests/1206): Enhances type handling for complex numbers in ColPivHouseholderQR_LAPACKE.h using LAPACKe specializations"}}
{"#1207": {"supported/other_improved": "[#1207](https://gitlab.com/libeigen/eigen/-/merge_requests/1207): Optimized psign implementation for floating point types with reduced computational complexity"}}
{"#1201": {"supported/other_fixed": "[#1201](https://gitlab.com/libeigen/eigen/-/merge_requests/1201): Fixes ODR violation with `gemm_extra_cols` function on PowerPC to prevent potential crashes"}}
{"#1208": {"supported/other_improved": "[#1208](https://gitlab.com/libeigen/eigen/-/merge_requests/1208): Reverted ODR changes and added EIGEN_ALWAYS_INLINE to gemm_extra_cols and gemm_complex_extra_cols functions to optimize performance"}}
{"#1210": {"supported/major_changes": "[#1210](https://gitlab.com/libeigen/eigen/-/merge_requests/1210): Optimizations for bfloat16 Matrix-Matrix Multiplication (MMA) with performance improvements up to 10%"}}
{"#1209": {"supported/other_added": "[#1209](https://gitlab.com/libeigen/eigen/-/merge_requests/1209): Added functionality to directly print diagonal matrix expressions without requiring dense object assignment"}}
{"#1212": {"supported/other_fixed": "[#1212](https://gitlab.com/libeigen/eigen/-/merge_requests/1212): Disabled array BF16 to F32 conversions on Power architecture to improve performance and stability"}}
{"#1213": {"supported/other_fixed": "[#1213](https://gitlab.com/libeigen/eigen/-/merge_requests/1213): Resolved multiple compiler warnings to improve code quality and maintainability"}}
{"#1214": {"supported/other_improved": "[#1214](https://gitlab.com/libeigen/eigen/-/merge_requests/1214): Optimized BF16 to F32 array conversions on Power architectures by reducing vector instructions"}}
{"#1215": {"supported/other_fixed": "[#1215](https://gitlab.com/libeigen/eigen/-/merge_requests/1215): Fixed compiler warnings in test files to improve code quality and maintainability"}}
{"#1216": {"supported/other_fixed": "[#1216](https://gitlab.com/libeigen/eigen/-/merge_requests/1216): Fixed a typo in the NEON `make_packet2f` function to improve correctness"}}
{"#1218": {"supported/other_fixed": "[#1218](https://gitlab.com/libeigen/eigen/-/merge_requests/1218): Fix MSVC atan2 test to align with POSIX specification for underflow cases"}}
{"#1220": {"supported/other_fixed": "[#1220](https://gitlab.com/libeigen/eigen/-/merge_requests/1220): Fixed NEON packetmath compilation issues with GCC and resolved preinterpret stack overflow problem"}}
{"#1219": {"supported/other_improved": "[#1219](https://gitlab.com/libeigen/eigen/-/merge_requests/1219): Optimized `pasin_float` function with bit manipulation for improved performance and fixed `psqrt_complex` error handling"}}
{"#1211": {"supported/major_changes": "[#1211](https://gitlab.com/libeigen/eigen/-/merge_requests/1211): Add CArg function for vectorized complex argument calculations"}}
{"#1221": {"supported/other_fixed": "[#1221](https://gitlab.com/libeigen/eigen/-/merge_requests/1221): Guard complex sqrt function for compatibility with old MSVC compilers"}}
{"#1222": {"supported/other_fixed": "[#1222](https://gitlab.com/libeigen/eigen/-/merge_requests/1222): Fixed epsilon value for long double in double-doubles to improve algorithm convergence on PowerPC"}}
{"#1224": {"supported/other_improved": "[#1224](https://gitlab.com/libeigen/eigen/-/merge_requests/1224): Added Packet int divide support for Power10 architecture, improving computational performance"}}
{"#1203": {"supported/major_changes": "[#1203](https://gitlab.com/libeigen/eigen/-/merge_requests/1203): Introduces typed logical operators for full vectorization and generalized boolean evaluations across scalar types"}}
{"#1223": {"supported/other_improved": "[#1223](https://gitlab.com/libeigen/eigen/-/merge_requests/1223): Vectorized implementation of atanh, added atan<half> definition, and new unit tests for mathematical functions"}}
{"#1226": {"supported/other_improved": "[#1226](https://gitlab.com/libeigen/eigen/-/merge_requests/1226): Improved performance of pow() on Skylake by using pmsub instruction in twoprod"}}
{"#1227": {"unsupported/other_fixed": "[#1227](https://gitlab.com/libeigen/eigen/-/merge_requests/1227): Fixed null placeholder accessor issue in Reduction SYCL test to prevent segmentation faults"}}
{"#1229": {"supported/other_fixed": "[#1229](https://gitlab.com/libeigen/eigen/-/merge_requests/1229): Resolved MemorySanitizer (MSAN) failures in SVD tests by fixing uninitialized matrix entry issues"}}
{"#1230": {"supported/other_improved": "[#1230](https://gitlab.com/libeigen/eigen/-/merge_requests/1230): Eliminates EIGEN_HAS_AVX512_MATH workaround, simplifying AVX512 packet math implementation"}}
{"#1228": {"supported/other_fixed": "[#1228](https://gitlab.com/libeigen/eigen/-/merge_requests/1228): Fixed compiler compatibility for `vec_div` instructions on Power architecture"}}
{"#1232": {"supported/other_improved": "[#1232](https://gitlab.com/libeigen/eigen/-/merge_requests/1232): Introduced guard mechanism to manage `long double` usage on GPU devices, improving compilation compatibility"}}
{"#1196": {"supported/major_changes": "[#1196](https://gitlab.com/libeigen/eigen/-/merge_requests/1196): Introduced vectorized comparison optimizations with typed comparisons and new selection operation, improving performance for comparison operations"}}
{"#1235": {"supported/other_fixed": "[#1235](https://gitlab.com/libeigen/eigen/-/merge_requests/1235): Fixed ODR issues with Intel's AVX512 TRSM kernels by removing static qualifiers"}}
{"#1237": {"unsupported/other_fixed": "[#1237](https://gitlab.com/libeigen/eigen/-/merge_requests/1237): Fixed GPU conv3d out-of-resources failure by adjusting 32-bit integer variable handling in kernel"}}
{"#1239": {"supported/other_fixed": "[#1239](https://gitlab.com/libeigen/eigen/-/merge_requests/1239): Fixed NEON integer shift operation test for signed shifts to prevent incorrect argument handling"}}
{"#1240": {"supported/breaking_changes": "[#1240](https://gitlab.com/libeigen/eigen/-/merge_requests/1240): Changes default comparison overloads to return `bool` arrays and introduces `cwiseTypedLesser` for typed comparisons"}}
{"#1236": {"supported/major_changes": "[#1236](https://gitlab.com/libeigen/eigen/-/merge_requests/1236): Added partial linear access for bfloat16 GEMM MMA, improving performance by 30% with reduced memory loads"}}
{"#1243": {"unsupported/other_fixed": "[#1243](https://gitlab.com/libeigen/eigen/-/merge_requests/1243): Fixed tensor comparison test in unsupported module"}}
{"#1242": {"supported/other_improved": "[#1242](https://gitlab.com/libeigen/eigen/-/merge_requests/1242): Optimized memory allocation during tridiagonalization for eigenvector computation"}}
{"#1233": {"supported/major_changes": "[#1233](https://gitlab.com/libeigen/eigen/-/merge_requests/1233): Vectorized `any()` and `all()` methods, improved performance for matrix operations and custom visitors"}}
{"#1241": {"supported/other_improved": "[#1241](https://gitlab.com/libeigen/eigen/-/merge_requests/1241): Improved CMake configuration to prevent unintended modifications when Eigen is a sub-project"}}
{"#1245": {"supported/other_fixed": "[#1245](https://gitlab.com/libeigen/eigen/-/merge_requests/1245): Fixed cwise test by resolving signed integer overflow issues using `.abs()` method"}}
{"#1244": {"supported/major_changes": "[#1244](https://gitlab.com/libeigen/eigen/-/merge_requests/1244): Introduces mechanism to specify permutation index types for PartialPivLU and FullPivLU, improving compatibility with Lapacke ILP64 interfaces"}}
{"#1248": {"supported/other_fixed": "[#1248](https://gitlab.com/libeigen/eigen/-/merge_requests/1248): Fixed typo in LinAlgSVD example code to enable compilation and correct least-squares solution"}}
{"#1250": {"supported/other_improved": "[#1250](https://gitlab.com/libeigen/eigen/-/merge_requests/1250): Replaced instances of 'Lesser' with 'Less' to improve terminology consistency"}}
{"#1251": {"supported/other_improved": "[#1251](https://gitlab.com/libeigen/eigen/-/merge_requests/1251): Minor code style improvement by adding newline to end of file"}}
{"#1252": {"supported/other_fixed": "[#1252](https://gitlab.com/libeigen/eigen/-/merge_requests/1252): Implemented a workaround for a compiler bug in Tridiagonalization.h, improving stability across compiler environments"}}
{"#1253": {"supported/other_improved": "[#1253](https://gitlab.com/libeigen/eigen/-/merge_requests/1253): Simplified packetmath specializations using a macro, improving code readability and maintainability across backends"}}
{"#1249": {"supported/other_fixed": "[#1249](https://gitlab.com/libeigen/eigen/-/merge_requests/1249): Fixed MSVC test failures related to intrinsic operations by replacing set1 intrinsics with set intrinsics"}}
{"#1254": {"supported/breaking_changes": "[#1254](https://gitlab.com/libeigen/eigen/-/merge_requests/1254): Backwards compatible implementation of DenseBase::select with swapped template argument order"}}
{"#1256": {"supported/other_fixed": "[#1256](https://gitlab.com/libeigen/eigen/-/merge_requests/1256): Fixed bug in minmax_coeff_visitor when matrix contains only NaN values"}}
{"#1255": {"supported/major_changes": "[#1255](https://gitlab.com/libeigen/eigen/-/merge_requests/1255): Added Matrix Multiply Accumulate (MMA) for BF16 GEMV, achieving 5.0-6.3X performance improvement on Power architecture"}}
{"#1257": {"supported/other_fixed": "[#1257](https://gitlab.com/libeigen/eigen/-/merge_requests/1257): Fixed minmax visitor behavior for PropagateFast option to prevent out-of-bounds index issues with NaN matrices"}}
{"#1258": {"supported/other_fixed": "[#1258](https://gitlab.com/libeigen/eigen/-/merge_requests/1258): Reverted BF16 GEMM changes that caused register spillage and performance degradation on LLVM Power architecture"}}
{"#1259": {"supported/other_improved": "[#1259](https://gitlab.com/libeigen/eigen/-/merge_requests/1259): Reinstated and expanded deadcode checks to improve code quality and maintainability"}}
{"#1262": {"supported/other_improved": "[#1262](https://gitlab.com/libeigen/eigen/-/merge_requests/1262): Limits build and link jobs on PowerPC to reduce out-of-memory issues"}}
{"#1263": {"supported/other_fixed": "[#1263](https://gitlab.com/libeigen/eigen/-/merge_requests/1263): Fixed PowerPC and Clang compiler warnings to improve code stability"}}
{"#1260": {"supported/major_changes": "[#1260](https://gitlab.com/libeigen/eigen/-/merge_requests/1260): Upgrades NaN and Inf detection to use modern C++14 standard features for improved floating-point value handling"}}
{"#1264": {"supported/other_improved": "[#1264](https://gitlab.com/libeigen/eigen/-/merge_requests/1264): Introduced EIGEN_NOT_A_MACRO macro to improve compatibility with TensorFlow build process"}}
{"#1265": {"unsupported/major_changes": "[#1265](https://gitlab.com/libeigen/eigen/-/merge_requests/1265): Vectorize tensor.isnan() using typed predicates with performance optimizations for AVX512"}}
{"#1266": {"supported/other_improved": "[#1266](https://gitlab.com/libeigen/eigen/-/merge_requests/1266): Removed pools for CMake versions less than 3.11, streamlining build configuration"}}
{"#1268": {"supported/other_improved": "[#1268](https://gitlab.com/libeigen/eigen/-/merge_requests/1268): Improved CMake argument parsing to support semi-colon separated lists for better build system compatibility"}}
{"#1267": {"supported/other_improved": "[#1267](https://gitlab.com/libeigen/eigen/-/merge_requests/1267): Corrected various typographical errors to improve code readability and documentation quality"}}
{"#1269": {"supported/other_fixed": "[#1269](https://gitlab.com/libeigen/eigen/-/merge_requests/1269): Reverted CMake pools changes to stabilize build process and eliminate configuration errors"}}
{"#1271": {"supported/other_fixed": "[#1271](https://gitlab.com/libeigen/eigen/-/merge_requests/1271): Fixed issues with SparseMatrix::Map typedef and setFromTriplets method robustness"}}
{"#1270": {"supported/other_fixed": "[#1270](https://gitlab.com/libeigen/eigen/-/merge_requests/1270): Fixed ARM build compatibility issues including casting, MSVC packet conversion, and 32-bit ARM macro definitions"}}
{"#1273": {"supported/major_changes": "[#1273](https://gitlab.com/libeigen/eigen/-/merge-requests/1273): Replaced internal pointer typedefs with standard `std::(u)intptr_t` types and removed ICC workaround"}}
{"#1272": {"supported/other_improved": "[#1272](https://gitlab.com/libeigen/eigen/-/merge_requests/1272): Optimized casting performance for x86_64 architectures, with significant speedups in bool and float casting operations"}}
{"#1274": {"supported/other_improved": "[#1274](https://gitlab.com/libeigen/eigen/-/merge_requests/1274): Optimize float->bool cast performance for AVX2 with significant speed improvements"}}
{"#1234": {"supported/other_improved": "[#1234](https://gitlab.com/libeigen/eigen/-/merge_requests/1234): Streamlined BLAS/LAPACK routine declarations by removing unused headers and improving file organization"}}
{"#1275": {"supported/other_improved": "[#1275](https://gitlab.com/libeigen/eigen/-/merge_requests/1275): Added vectorized integer casts for x86 and removed redundant unit tests, improving performance by up to 66.77%"}}
{"#1276": {"supported/other_improved": "[#1276](https://gitlab.com/libeigen/eigen/-/merge_requests/1276): Optimized `generic_rsqrt_newton_step` function, improving accuracy and performance of square root calculations"}}
{"#1277": {"supported/other_fixed": "[#1277](https://gitlab.com/libeigen/eigen/-/merge_requests/1277): Fix incorrect casting in AVX512DQ vectorization path"}}
{"#1279": {"supported/major_changes": "[#1279](https://gitlab.com/libeigen/eigen/-/merge_requests/1279): Refactors indexed view expressions to enable non-const reference access with symbolic indices"}}
{"#1280": {"supported/breaking_changes": "[#1280](https://gitlab.com/libeigen/eigen/-/merge_requests/1280): Disabled raw array indexed view access for 1D arrays to prevent potential bugs and improve library safety"}}
{"#1283": {"supported/other_fixed": "[#1283](https://gitlab.com/libeigen/eigen/-/merge_requests/1283): Corrected intrinsic function for accurate truncation during double-to-int casting"}}
{"#1148": {"supported/major_changes": "[#1148](https://gitlab.com/libeigen/eigen/-/merge_requests/1148): Introduced runtime memory allocation guards and modified assertion behavior to improve debugging and error handling"}}
{"#1284": {"supported/other_improved": "[#1284](https://gitlab.com/libeigen/eigen/-/merge_requests/1284): Clean up packet math implementation by removing unused traits, adding missing specializations, and setting blend properties"}}
{"#1286": {"supported/other_improved": "[#1286](https://gitlab.com/libeigen/eigen/-/merge_requests/1286): Improves type safety for non-const symbolic indexed view expressions by adding explicit l-value qualification"}}
{"#1282": {"supported/other_fixed": "[#1282](https://gitlab.com/libeigen/eigen/-/merge_requests/1282): ASAN fixes for AVX512 GEMM/TRSM kernels, addressing memory safety issues with buffer overrun prevention"}}
{"#1287": {"unsupported/major_changes": "[#1287](https://gitlab.com/libeigen/eigen/-/merge_requests/1287): Fixed potential crash in tensor contraction with empty tensors by removing restrictive assert"}}
{"#1288": {"supported/other_improved": "[#1288](https://gitlab.com/libeigen/eigen/-/merge_requests/1288): Updated documentation for Eigen 3.4.x to improve build process and clarity"}}
{"#1291": {"supported/other_fixed": "[#1291](https://gitlab.com/libeigen/eigen/-/merge_requests/1291): Fixed `.gitignore` to prevent accidentally ignoring Eigen's Core directory on Windows"}}
{"#1281": {"supported/major_changes": "[#1281](https://gitlab.com/libeigen/eigen/-/merge_requests/1281): Introduces `insertFromTriplets` and `insertFromSortedTriplets` methods for efficient sparse matrix batch insertion and optimizes `setFromTriplets`"}}
{"#1293": {"supported/major_changes": "[#1293](https://gitlab.com/libeigen/eigen/-/merge_requests/1293): Enable new AVX512 GEMM kernel by default, improving performance for supported hardware"}}
{"#1294": {"supported/other_improved": "[#1294](https://gitlab.com/libeigen/eigen/-/merge_requests/1294): Improved accuracy of `erf()` function with refined rational approximation and enhanced clamping methods"}}
{"#1296": {"supported/major_changes": "[#1296](https://gitlab.com/libeigen/eigen/-/merge_requests/1296): Adds dynamic dispatch for BF16 GEMM on Power architecture with new VSX implementation, achieving up to 13.4X speedup and improved conversion performance"}}
{"#1295": {"supported/major_changes": "[#1295](https://gitlab.com/libeigen/eigen/-/merge_requests/1295): Refactored IndexedView to simplify SFINAE usage, improve readability, and re-enable raw fixed-size array access"}}
{"#1297": {"supported/other_added": "[#1297](https://gitlab.com/libeigen/eigen/-/merge_requests/1297): Added `Packet4ui`, `Packet8ui`, and `Packet4ul` packet types for SSE/AVX to support unsigned integer SIMD operations"}}
{"#1299": {"supported/other_added": "[#1299](https://gitlab.com/libeigen/eigen/-/merge_requests/1299): Added BF16 pcast functions and centralized type casting in `TypeCasting.h`"}}
{"#1302": {"supported/other_fixed": "[#1302](https://gitlab.com/libeigen/eigen/-/merge_requests/1302): Fixed typo in SSE packetmath implementation"}}
{"#1298": {"supported/other_improved": "[#1298](https://gitlab.com/libeigen/eigen/-/merge_requests/1298): Improved tensor select evaluator using typed ternary selection operator for better performance"}}
{"#1303": {"supported/other_improved": "[#1303](https://gitlab.com/libeigen/eigen/-/merge_requests/1303): Improved `Erf()` function performance and accuracy, ensuring +/-1 return values at clamping points with computational speed enhancements"}}
{"#1306": {"supported/other_removed": "[#1306](https://gitlab.com/libeigen/eigen/-/merge_requests/1306): Removed last remaining instances of unused `HasHalfPacket` enum"}}
{"#1301": {"supported/breaking_changes": "[#1301](https://gitlab.com/libeigen/eigen/-/merge_requests/1301): Introduces canonical range corrections for Euler angles with new default behavior, potentially breaking existing angle computations"}}
{"#1308": {"supported/other_fixed": "[#1308](https://gitlab.com/libeigen/eigen/-/merge_requests/1308): Fix `pow` function for `uint32_t` and disable problematic packet multiplication operation"}}
{"#1307": {"supported/major_changes": "[#1307](https://gitlab.com/libeigen/eigen/-/merge_requests/1307): New VSX implementation of BF16 GEMV for Power architecture with up to 6.7X performance improvement"}}
{"#1309": {"supported/other_added": "[#1309](https://gitlab.com/libeigen/eigen/-/merge_requests/1309): Added `Abs2` method for `Packet4ul` data type to enhance vectorized operations"}}
{"#1312": {"supported/other_fixed": "[#1312](https://gitlab.com/libeigen/eigen/-/merge_requests/1312): Fixed boolean bitwise and warning in test code"}}
{"#1311": {"supported/other_fixed": "[#1311](https://gitlab.com/libeigen/eigen/-/merge_requests/1311): Fixed sparse iterator compatibility and warnings on macOS with Clang by modifying `StorageRef` and replacing deprecated `std::random_shuffle`"}}
{"#1304": {"supported/major_changes": "[#1304](https://gitlab.com/libeigen/eigen/-/merge_requests/1304): Specialized vectorized casting evaluator for improved packet type conversion efficiency"}}
{"#1313": {"supported/other_improved": "[#1313](https://gitlab.com/libeigen/eigen/-/merge_requests/1313): Added pmul and abs2 operations for Packet4ul in AVX2 implementation"}}
{"#1316": {"supported/other_improved": "[#1316](https://gitlab.com/libeigen/eigen/-/merge_requests/1316): Implemented `pcmp`, `pmin`, and `pmax` functions for `Packet4ui` type in SSE to improve vectorization compliance"}}
{"#1305": {"supported/other_improved": "[#1305](https://gitlab.com/libeigen/eigen/-/merge_requests/1305): Enhanced `StridedLinearBufferCopy` with half-`Packet` operations to improve computational efficiency"}}
{"#1317": {"supported/other_improved": "[#1317](https://gitlab.com/libeigen/eigen/-/merge_requests/1317): Optimized F32 to BF16 conversions with loop unrolling, achieving 1.8X faster performance for LLVM and vector pair improvements for GCC"}}
{"#1318": {"supported/other_fixed": "[#1318](https://gitlab.com/libeigen/eigen/-/merge_requests/1318): Add safeguard in JacobiSVD to handle non-finite inputs by setting `m_nonzeroSingularValues` to zero"}}
{"#1319": {"supported/other_fixed": "[#1319](https://gitlab.com/libeigen/eigen/-/merge_requests/1319): Fixed ColMajor BF16 GEMV implementation for RowMajor input vectors"}}
{"#1321": {"supported/other_fixed": "[#1321](https://gitlab.com/libeigen/eigen/-/merge_requests/1321): Cleaned up array_cwise test by suppressing MSVC warnings, resolving operator precedence, and removing redundant shift tests"}}
{"#1322": {"supported/other_fixed": "[#1322](https://gitlab.com/libeigen/eigen/-/merge_requests/1322): Fixed specialized `loadColData` implementation for BF16 GEMV, improving LLVM compatibility"}}
{"#1323": {"supported/other_fixed": "[#1323](https://gitlab.com/libeigen/eigen/-/merge_requests/1323): Fixed compiler warning related to modulo by zero in visitor pattern"}}
{"#1325": {"supported/other_improved": "[#1325](https://gitlab.com/libeigen/eigen/-/merge_requests/1325): Renamed `array_cwise` test to prevent naming conflicts and suppressed compiler warnings"}}
{"#1289": {"supported/major_changes": "[#1289](https://gitlab.com/libeigen/eigen/-/merge_requests/1289): Moves thread pool code from Tensor to Core module, enhancing multithreading infrastructure"}}
{"#1324": {"supported/other_improved": "[#1324](https://gitlab.com/libeigen/eigen/-/merge_requests/1324): Update `ndtri` function to return NaN for out-of-range input values, improving consistency with SciPy and MATLAB"}}
{"#1320": {"supported/other_improved": "[#1320](https://gitlab.com/libeigen/eigen/-/merge_requests/1320): Improved memory management for FFTW/IMKL FFT backends using `std::shared_ptr`"}}
{"#1285": {"supported/major_changes": "[#1285](https://gitlab.com/libeigen/eigen/-/merge_requests/1285): Introduces Unified Shared Memory (USM) support for SYCL, simplifying device pointer management and improving expression construction efficiency"}}
{"#1327": {"supported/other_fixed": "[#1327](https://gitlab.com/libeigen/eigen/-/merge_requests/1327): Fixed CUDA compilation issues by adjusting header inclusion order and resolving `EIGEN_AVOID_STL_ARRAY` related problems"}}
{"#1329": {"supported/major_changes": "[#1329](https://gitlab.com/libeigen/eigen/-/merge_requests/1329): Added macros to customize ThreadPool synchronization primitives for enhanced performance and flexibility"}}
{"#1333": {"supported/other_fixed": "[#1333](https://gitlab.com/libeigen/eigen/-/merge_requests/1333): Fixed SVD initialization issues and compiler warnings in JacobiSVD and BDCSVD routines"}}
{"#1314": {"supported/major_changes": "[#1314](https://gitlab.com/libeigen/eigen/-/merge_requests/1314): Introduced `canonicalEulerAngles` method to replace deprecated `eulerAngles`, improving Euler angle calculation standardization and accuracy"}}
{"#1334": {"supported/other_improved": "[#1334](https://gitlab.com/libeigen/eigen/-/merge_requests/1334): Improved unrolled assignment evaluator with more consistent linear access methods for small fixed-size arrays and matrices"}}
{"#1335": {"supported/other_added": "[#1335](https://gitlab.com/libeigen/eigen/-/merge_requests/1335): Added new methods `removeOuterVectors()` and `insertEmptyOuterVectors()` for flexible sparse matrix manipulation"}}
{"#1337": {"supported/other_improved": "[#1337](https://gitlab.com/libeigen/eigen/-/merge_requests/1337): Clean-up of Redux.h and vectorization_logic test to improve code readability and test reliability"}}
{"#1341": {"unsupported/other_improved": "[#1341](https://gitlab.com/libeigen/eigen/-/merge_requests/1341): Replaced `CudaStreamDevice` with `GpuStreamDevice` in tensor GPU benchmarks for improved accuracy"}}
{"#1339": {"supported/other_fixed": "[#1339](https://gitlab.com/libeigen/eigen/-/merge_requests/1339): Fixes CUDA compilation issues with `EIGEN_HAS_ARM64_FP16_SCALAR_ARITHMETIC` by preventing miscompilation in host/device functions"}}
{"#1338": {"supported/other_improved": "[#1338](https://gitlab.com/libeigen/eigen/-/merge_requests/1338): Optimized error handling for `scalar_unary_pow_op` with improved performance and robustness for integer base and exponent scenarios"}}
{"#1342": {"supported/other_improved": "[#1342](https://gitlab.com/libeigen/eigen/-/merge_requests/1342): Optimized Newton-Raphson step for reciprocal square root, reducing max relative error from 3 to 2 ulps in floating-point calculations"}}
{"#1343": {"supported/other_fixed": "[#1343](https://gitlab.com/libeigen/eigen/-/merge_requests/1343): Fixed unary `pow()` error handling with improved edge case management and test robustness"}}
{"#1344": {"supported/other_fixed": "[#1344](https://gitlab.com/libeigen/eigen/-/merge_requests/1344): Prevent underflow in `prsqrt` function by adding numerical stability safeguards"}}
{"#1336": {"supported/major_changes": "[#1336](https://gitlab.com/libeigen/eigen/-/merge_requests/1336): Introduces linear redux evaluators with efficient linear access methods for expressions, improving traversal and potential performance"}}
{"#1328": {"supported/other_improved": "[#1328](https://gitlab.com/libeigen/eigen/-/merge_requests/1328): Implements specialized vectorization for `scalar_cast_op` evaluator, enhancing performance and safety in casting operations"}}
{"#1347": {"supported/major_changes": "[#1347](https://gitlab.com/libeigen/eigen/-/merge_requests/1347): Adds compile-time and run-time assertions for `Ref<const>` construction to improve memory layout safety and error handling"}}
{"#1346": {"supported/other_improved": "[#1346](https://gitlab.com/libeigen/eigen/-/merge_requests/1346): Introduced move constructor for `Ref<const...>` to improve performance and reduce unnecessary copying"}}
{"#1349": {"supported/other_fixed": "[#1349](https://gitlab.com/libeigen/eigen/-/merge_requests/1349): Fixed AVX `pstore` function for integer types to ensure correct aligned store intrinsics"}}
{"#1351": {"supported/other_fixed": "[#1351](https://gitlab.com/libeigen/eigen/-/merge_requests/1351): Fixed SVD test stability by removing deprecated test behavior"}}
{"#1350": {"supported/other_fixed": "[#1350](https://gitlab.com/libeigen/eigen/-/merge_requests/1350): Fixed `safe_abs` in `int_pow` to improve compatibility with Clang compiler"}}
{"#1353": {"supported/other_improved": "[#1353](https://gitlab.com/libeigen/eigen/-/merge_requests/1353): Removed deprecated function calls in SVD test suite to improve code maintainability"}}
{"#1352": {"supported/other_improved": "[#1352](https://gitlab.com/libeigen/eigen/-/merge_requests/1352): Improved `rint`, `round`, `floor`, and `ceil` mathematical functions for enhanced precision and performance"}}
{"#1354": {"supported/other_improved": "[#1354](https://gitlab.com/libeigen/eigen/-/merge_requests/1354): Added optional offset parameter to `ploadu_partial` and `pstoreu_partial` to improve API consistency"}}
{"#1356": {"supported/other_improved": "[#1356](https://gitlab.com/libeigen/eigen/-/merge_requests/1356): Fixed compilation warning by unconditionally defining `EIGEN_HAS_ARM64_FP16_VECTOR_ARITHMETIC` on ARM architectures"}}
{"#1345": {"supported/other_added": "[#1345](https://gitlab.com/libeigen/eigen/-/merge_requests/1345): Adds new Quaternion constructor that accepts a real scalar and 3D vector for more intuitive quaternion creation"}}
{"#1357": {"supported/other_fixed": "[#1357](https://gitlab.com/libeigen/eigen/-/merge_requests/1357): Fixed `supportsMMA` to correctly handle `EIGEN_ALTIVEC_MMA_DYNAMIC_DISPATCH` compilation flag and compiler support"}}
{"#1360": {"supported/other_fixed": "[#1360](https://gitlab.com/libeigen/eigen/-/merge_requests/1360): Fixed return type of `ivcSize` in `IndexedViewMethods.h` to improve type safety and consistency"}}
{"#1362": {"supported/other_fixed": "[#1362](https://gitlab.com/libeigen/eigen/-/merge_requests/1362): Fixed `_mm256_cvtps_ph` intrinsic argument to eliminate MSVC compilation warning"}}
{"#1361": {"supported/other_fixed": "[#1361](https://gitlab.com/libeigen/eigen/-/merge_requests/1361): Fixes Altivec compilation compatibility with C++20 and higher standards"}}
{"#1363": {"supported/other_fixed": "[#1363](https://gitlab.com/libeigen/eigen/-/merge_requests/1363): Fixed `arg` function compatibility in CUDA environments, resolving compilation issues with MSVC and C++20"}}
{"#1358": {"supported/other_improved": "[#1358](https://gitlab.com/libeigen/eigen/-/merge_requests/1358): Addressed multiple compiler warnings across various modules through strategic code refactoring and type handling improvements"}}
{"#1359": {"supported/other_fixed": "[#1359](https://gitlab.com/libeigen/eigen/-/merge_requests/1359): Fixed AVX512 trsm kernel memory allocation issues in nomalloc environments"}}
{"#1364": {"supported/other_improved": "[#1364](https://gitlab.com/libeigen/eigen/-/merge_requests/1364): Optimized `check_rows_cols_for_overflow` with partial template specialization for more efficient matrix size checks"}}
{"#1367": {"supported/other_fixed": "[#1367](https://gitlab.com/libeigen/eigen/-/merge_requests/1367): Addresses GCC compiler warnings by fixing zero-sized block handling, assignment operators, and uninitialized variable issues"}}
{"#1369": {"supported/other_fixed": "[#1369](https://gitlab.com/libeigen/eigen/-/merge_requests/1369): Fixed ARM build warnings by addressing type casting and variable shadowing issues in Eigen's Tensor module"}}
{"#1370": {"supported/other_fixed": "[#1370](https://gitlab.com/libeigen/eigen/-/merge_requests/1370): Fix compiler warning for matrix-vector multiplication loop optimizations on x86-64 gcc 10+"}}
{"#1371": {"supported/other_fixed": "[#1371](https://gitlab.com/libeigen/eigen/-/merge_requests/1371): Fixed `-Wmaybe-uninitialized` warning in SVD implementation by improving dimension initialization and type safety"}}
{"#1373": {"supported/other_improved": "[#1373](https://gitlab.com/libeigen/eigen/-/merge_requests/1373): Adds `max_digits10` function to `Eigen::NumTraits` for improved floating-point decimal digit representation"}}
{"#1372": {"supported/other_improved": "[#1372](https://gitlab.com/libeigen/eigen/-/merge_requests/1372): Enhanced Power architecture support with partial packet resolution, CPU improvements, DataMapper updates, and `bfloat16` type compatibility"}}
{"#1376": {"supported/other_fixed": "[#1376](https://gitlab.com/libeigen/eigen/-/merge_requests/1376): Fixed nullptr dereference issue in triangular product for zero-sized matrices"}}
{"#1331": {"supported/other_added": "[#1331](https://gitlab.com/libeigen/eigen/-/merge_requests/1331): Added new test to validate SYCL functionalities in Eigen core library"}}
{"#1365": {"supported/other_improved": "[#1365](https://gitlab.com/libeigen/eigen/-/merge_requests/1365): Added missing x86 primary casts for float, int, and double type conversions across SIMD instruction sets"}}
{"#1377": {"supported/other_fixed": "[#1377](https://gitlab.com/libeigen/eigen/-/merge_requests/1377): Fix undefined behavior in triangular solves for empty systems"}}
{"#1378": {"supported/other_improved": "[#1378](https://gitlab.com/libeigen/eigen/-/merge_requests/1378): Improved handling of reference forwarding by replacing `std::move()` with `std::forward()` to address clang-tidy warning"}}
{"#1379": {"supported/other_fixed": "[#1379](https://gitlab.com/libeigen/eigen/-/merge_requests/1379): Prevents nullptr dereference in SVD implementation for small matrices"}}
{"#1375": {"supported/major_changes": "[#1375](https://gitlab.com/libeigen/eigen/-/merge_requests/1375): Add architecture definition files for Qualcomm Hexagon Vector Extension (HVX), introducing support for `EIGEN_VECTORIZE_HVX` and optimized vector operations"}}
{"#1380": {"supported/other_fixed": "[#1380](https://gitlab.com/libeigen/eigen/-/merge_requests/1380): Fixes undefined behavior related to scalar memory alignment with improved memory alignment checks"}}
{"#1381": {"supported/other_improved": "[#1381](https://gitlab.com/libeigen/eigen/-/merge_requests/1381): Update boost MP test suite to reference new SVD test cases"}}
{"#1382": {"supported/other_fixed": "[#1382](https://gitlab.com/libeigen/eigen/-/merge_requests/1382): Fix tensor strided linear buffer copy to prevent negative index issues and improve integer arithmetic safety"}}
{"#1383": {"supported/breaking_changes": "[#1383](https://gitlab.com/libeigen/eigen/-/merge_requests/1383): Introduces `EIGEN_TEMPORARY_UNALIGNED_SCALAR_UB` macro to handle unaligned scalar undefined behavior, primarily addressing TensorFlow Lite compatibility issues"}}
{"#1384": {"supported/other_improved": "[#1384](https://gitlab.com/libeigen/eigen/-/merge_requests/1384): Added IWYU private pragmas to internal headers to enhance tooling capabilities and header management"}}
{"#1385": {"supported/other_improved": "[#1385](https://gitlab.com/libeigen/eigen/-/merge_requests/1385): Renamed non-standard plugin headers to use `.inc` extension for improved header management"}}
{"#1386": {"supported/other_fixed": "[#1386](https://gitlab.com/libeigen/eigen/-/merge_requests/1386): Fixed ARM32 floating-point division issues, improving accuracy and reliability of float computations"}}
{"#1387": {"supported/major_changes": "[#1387](https://gitlab.com/libeigen/eigen/-/merge_requests/1387): Introduced a new method to improve handling of block expressions, offering a backwards compatible solution for converting blocks of block expressions"}}
{"#1388": {"supported/other_fixed": "[#1388](https://gitlab.com/libeigen/eigen/-/merge_requests/1388): Fixed stage success check in Pardiso solver to only report success when `m_info == Eigen::Success`"}}
{"#1391": {"supported/other_improved": "[#1391](https://gitlab.com/libeigen/eigen/-/merge_requests/1391): Exported `ThreadPool` symbols from legacy header to silence Clang include-cleaner warnings"}}
{"#1392": {"supported/other_fixed": "[#1392](https://gitlab.com/libeigen/eigen/-/merge_requests/1392): Fixed CUDA device function calls by adding `EIGEN_DEVICE_FUNC` attribute to static run methods"}}
{"#1330": {"supported/major_changes": "[#1330](https://gitlab.com/libeigen/eigen/-/merge_requests/1330): Added half precision type support for SYCL-2020 with efficient `Eigen::half` and `cl::sycl::half` conversions"}}
{"#1394": {"supported/other_fixed": "[#1394](https://gitlab.com/libeigen/eigen/-/merge_requests/1394): Fixed extra semicolon in `XprHelper` causing compilation issues with `-Wextra-semi` flag"}}
{"#1396": {"supported/other_fixed": "[#1396](https://gitlab.com/libeigen/eigen/-/merge_requests/1396): Fixed sparse triangular view iterator by restoring `row()` and `col()` function implementations to prevent segmentation faults"}}
{"#1397": {"supported/other_improved": "[#1397](https://gitlab.com/libeigen/eigen/-/merge_requests/1397): Consolidated and simplified multiple implementations of divup/div_up/div_ceil functions"}}
{"#1398": {"supported/other_improved": "[#1398](https://gitlab.com/libeigen/eigen/-/merge_requests/1398): Eliminated use of `_res` identifier to resolve macro conflicts and improve code compilation"}}
{"#1355": {"unsupported/other_fixed": "[#1355](https://gitlab.com/libeigen/eigen/-/merge_requests/1355): Disable FP16 arithmetic for arm32 to prevent compatibility issues with Clang compiler"}}
{"#1389": {"supported/major_changes": "[#1389](https://gitlab.com/libeigen/eigen/-/merge_requests/1389): New panel modes for GEMM MMA with real and complex number support, delivering performance improvements up to 2.84X for small matrices and 34-75% speed enhancements for large matrices"}}
